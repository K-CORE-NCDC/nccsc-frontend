{"version":3,"sources":["containers/Signup/MemberShip.js"],"names":["NumRegex","RegExp","AlphaNumRegexwithSpecialCharsExceptDot","KoreanRegex","MemberShip","changestep","useState","koreanlanguage","setKoreanlanguage","Englishlanguage","setEnglishlanguage","context","useContext","Context","useEffect","id","password","verify_password","name","institute","phone_number","email","domain_email","verification","otp","emailVerified","mobileVerified","isVerified","errors","koreanid","koreanpassword","koreanverify_password","koreanname","koreaninstitute","koreanphone_number","koreanemail","koreandomain_email","koreanverification","form","setForm","verificationState","setverificationState","ClickEmailverifyButton","setClickEmailverifyButton","ClickMobileverifyButton","setClickMobileverifyButton","message","setMessage","inputmail","setInputMail","instituteDropdown","setInstituteDropdown","encData","setEncData","visibility","setvisibility","setotpStatus","emailExist","setEmailExist","setEmailStatus","RegistrationClass","setRegistrationClass","dispatch","useDispatch","regitserResponse","useSelector","data","dataVisualizationReducer","registerData","checkUserId","checkUserName","isEmailExist","homeReducer","is_email_exist","registration_status","mobile_verified","status","passKey","otp_verification_status","otp_validation_status","formSet","emailsentstatus","e","target","value","oldState","count","alphas","numbers","i","length","charCodeAt","idValidator","test","small","caps","special","number","passwordValidator","password_is","nameValidator","console","log","f","instituteOptionsKorean","instituteOptions","html","push","window","open","document","form_chk","action","submit","swal","closeOnClickOutside","then","setTimeout","className","type","onChange","onClick","defaultMessage","disabled","checkEmail","htmlFor","getPassEncodeId","checkMobile","prevState","sendEmail","verifyEmail","verifyOTP","CheckVerificationCode","method","userRegister"],"mappings":"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","file":"static/js/6.b797b7ac.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport \"../../styles/clustergram.css\";\r\nimport {\r\n  userRegister,\r\n  checkUserName,\r\n  getPassEncodeId,\r\n  sendEmail,\r\n  verifyOTP,\r\n  checkEmail,\r\n  checkMobile\r\n} from \"../../actions/api_actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { EyeIcon, EyeOffIcon } from \"@heroicons/react/outline\";\r\nimport { Context } from \"../../wrapper\";\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst AlphaNumRegex = new RegExp(\"^[a-zA-Z0-9]*$\");\r\nconst AlphaNumRegexwithNoSpecialCharecters = new RegExp(\"(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{2,}$\");\r\nconst AlphaNumRegexwithNoSpecialCharecterss = new RegExp(\"[A-Za-zÀ-ȕ0-9 ]\");\r\nconst NumRegex = new RegExp(\"^[0-9]*$\");\r\nconst AlphaNumRegexwithSpecialCharsExceptDot = new RegExp(\"^[ A-Za-z0-9_/#&+-]*$\");\r\nconst KoreanRegex = new RegExp(\"(\\S*[\\u3131-\\u314e|\\u314f-\\u3163|\\uac00-\\ud7a3]+\\S*)\")\r\n\r\nconst MemberShip = ({ changestep }) => {\r\n\r\n\r\n  const register_user = () => {\r\n    \r\n    console.log(form)\r\n    for (let i in form['errors']) {\r\n      if (form['errors'][i] === \"\") {\r\n        form.isVerified = true\r\n      } else {\r\n        form.isVerified = false\r\n        break;\r\n      }\r\n    //   console.log(form,'erorr-0-------')  \r\n      // for (let i in form) {\r\n      //   if (i !== 'mobileVerified' && i !== 'emailVerified' && i !== 'errors' && form[i] === \"\") {\r\n      //     form.isVerified = false\r\n      //     break;\r\n      //   } else if (i !== 'mobileVerified' && i !== 'emailVerified' && i !== 'errors') {\r\n      //     form.isVerified = true\r\n\r\n      //   }\r\n      // }\r\n    }\r\n    if ((form.mobileVerified === true || form.emailVerified === true) && (form.isVerified === true)) {\r\n      let data = {\r\n        id: form.id,\r\n        password: form.password,\r\n        name: form.name,\r\n        phone_number: form.phone_number,\r\n        email: form.email,\r\n        domain_email: form.domain_email,\r\n        institute : form.institute\r\n        \r\n      }\r\n      dispatch(userRegister(\"POST\", data));\r\n      changestep(2);\r\n    }\r\n  };\r\n\r\n  const [koreanlanguage, setKoreanlanguage] = useState(false);\r\n  const [Englishlanguage, setEnglishlanguage] = useState(true);\r\n  const context = useContext(Context);\r\n  \r\n  useEffect(() => {\r\n    if (context[\"locale\"] === \"kr-KO\") {\r\n      setKoreanlanguage(true);\r\n      setEnglishlanguage(false);\r\n    } else {\r\n      setKoreanlanguage(false);\r\n      setEnglishlanguage(true);\r\n    }\r\n  });\r\n  let initial_state = {\r\n    id: \"\",\r\n    password: \"\",\r\n    verify_password: \"\",\r\n    name: \"\",\r\n    institute: \"\",\r\n    phone_number: \"\",\r\n    email: \"\",\r\n    domain_email: \"\",\r\n    verification: \"\",\r\n    otp: \"\",\r\n    emailVerified: false,\r\n    mobileVerified: false,\r\n    isVerified: false,\r\n    errors: {\r\n      id: \"\",\r\n      koreanid: \"\",\r\n      password: \"\",\r\n      koreanpassword: \"\",\r\n      verify_password: \"\",\r\n      koreanverify_password: \"\",\r\n      name: \"\",\r\n      koreanname: \"\",\r\n      institute: \"\",\r\n      koreaninstitute: \"\",\r\n      phone_number: \"\",\r\n      koreanphone_number: \"\",\r\n      email: \"\",\r\n      koreanemail: \"\",\r\n      domain_email: \"\",\r\n      koreandomain_email: \"\",\r\n      verification: \"\",\r\n      koreanverification: \"\",\r\n    },\r\n  };\r\n\r\n  const [form, setForm] = useState(initial_state);\r\n  const [verificationState, setverificationState] = useState(\"\");\r\n  const [ClickEmailverifyButton, setClickEmailverifyButton] = useState(false);\r\n  const [ClickMobileverifyButton, setClickMobileverifyButton] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [inputmail, setInputMail] = useState(false);\r\n  const [instituteDropdown, setInstituteDropdown] = useState([]);\r\n  const [encData, setEncData] = useState(\"\");\r\n  const [visibility, setvisibility] = useState(false);\r\n  const [otpStatus, setotpStatus] = useState(false);\r\n  const [emailExist, setEmailExist] = useState(\"\")\r\n  const [emailStatus, setEmailStatus] = useState(false)\r\n  const [RegistrationClass, setRegistrationClass] = useState(false)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const regitserResponse = useSelector(\r\n    (data) => data.dataVisualizationReducer.registerData\r\n  );\r\n  const checkUserId = useSelector(\r\n    (data) => data.dataVisualizationReducer.checkUserName\r\n  );\r\n  const isEmailExist = useSelector(\r\n    (data) => data.homeReducer.is_email_exist\r\n  )\r\n  const registration_status = useSelector(\r\n    (data) => data.homeReducer.registration_status\r\n  )\r\n\r\n  const mobile_verified = useSelector(\r\n    (data) => data.homeReducer.mobileVerified\r\n  )\r\n\r\n  useEffect(() => {\r\n    isEmailExist && setEmailExist(isEmailExist.status)\r\n  }, [isEmailExist]);\r\n\r\n  const passKey = useSelector((data) => data.dataVisualizationReducer.passKey);\r\n  const otp_verification_status = useSelector((data) => data.homeReducer.otp_validation_status);\r\n  const emailsentstatus = useSelector((data) => data.homeReducer.emailsentstatus);\r\n\r\n  // !\t33\texclamation mark\r\n  // \"\t34\tquotation mark\r\n  // #\t35\tnumber sign\r\n  // $\t36\tdollar sign\r\n  // %\t37\tpercent sign\r\n  // &\t38\tampersand\r\n  // '\t39\tapostrophe\r\n  // (\t40\tleft parenthesis\r\n  // )\t41\tright parenthesis\r\n  // *\t42\tasterisk\r\n  // +\t43\tplus sign\r\n  // ,\t44\tcomma\r\n  // -\t45\thyphen\r\n  // .\t46\tperiod\r\n  // /\t47\tslash\r\n  // @  64  at sign\r\n\r\n  let passwordValidator = (password) => {\r\n\r\n    let count = 0, small = 0, caps = 0, special = 0, number = 0;\r\n    for (let i = 0; i < password.length; i++) {\r\n      if (password.charCodeAt(i) >= 97 && password.charCodeAt(i) <= 122) {\r\n        small++;\r\n        if (small === 1)\r\n          count++;\r\n      }\r\n      else if (password.charCodeAt(i) >= 65 && password.charCodeAt(i) <= 90) {\r\n        caps++;\r\n        if (caps === 1)\r\n          count++;\r\n      }\r\n\r\n      else if ((password.charCodeAt(i) >= 33 && password.charCodeAt(i) <= 47) || password.charCodeAt(i) === 64) {\r\n        special++;\r\n        if (special === 1)\r\n          count++;\r\n      }\r\n      else if (password.charCodeAt(i) >= 48 && password.charCodeAt(i) <= 57) {\r\n        number++;\r\n        if (number === 1)\r\n          count++;\r\n      }\r\n\r\n      if (count >= 3 && password.length >= 9 && password.length <= 20) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  let nameValidator = (name) => {\r\n    for (let i = 0; i < name.length; i++) {\r\n      if (name.charCodeAt(i) >= 48 && name.charCodeAt(i) <= 57) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i = 0; i < name.length; i++) {\r\n      if ((name.charCodeAt(i) >= 33 && name.charCodeAt(i) <= 47) || name.charCodeAt(i) === 64) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  let idValidator = (id) => {\r\n    let count = 0, alphas = 0, numbers = 0;\r\n    for (let i = 0; i < id.length; i++) {\r\n      if ((id.charCodeAt(i) >= 65 && id.charCodeAt(i) <= 90) || (id.charCodeAt(i) >= 97 && id.charCodeAt(i) <= 122)) {\r\n        alphas++;\r\n        if (alphas === 1)\r\n          count++;\r\n      }\r\n      else if (id.charCodeAt(i) >= 48 && id.charCodeAt(i) <= 57) {\r\n        numbers++;\r\n        if (numbers === 1) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count >= 2) {\r\n        return true\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const formSet = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.value === \"input\") {\r\n      setForm((oldState) => ({ ...oldState, [e.target.name]: \"\" }));\r\n      setInputMail(true);\r\n    } else {\r\n      setForm((oldState) => ({ ...oldState, [e.target.name]: e.target.value }));\r\n    }\r\n    if (e.target.name === \"verification\") {\r\n      setverificationState(e.target.value);\r\n    }\r\n\r\n    const errors = form.errors;\r\n\r\n    // const isKoreanWord = (input) => {\r\n    //   const match = input.match(/[\\u3131-\\uD79D]/g);\r\n    //   return match ? match.length === input.length : false;\r\n    // }\r\n    // ID Validation\r\n    let format = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n    if (name === \"id\" && value === \"\") {\r\n      errors.id = \"Please enter 6-10 characters\";\r\n      errors.koreanid = \"IDLength\";\r\n    }\r\n    else if (name === \"id\" && !idValidator(value)) {\r\n      errors.id = \"ID should be combination of capital/lowercase alphabets and numbers in 6-10 letters. Koreans and special symbols are not allowed\";\r\n      errors.koreanid = \"DefaultIDMsg\";\r\n\r\n    }\r\n    else if (name === \"id\" && format.test(value)) {\r\n      errors.id = \"(e.g. @$#!*&) Special characters cannot be used\";\r\n      errors.koreanid = \"IDSpecialCharecters\";\r\n\r\n    }\r\n    else if (name === \"id\" && KoreanRegex.test(value)) {\r\n      errors.id = \"Korean is not available\";\r\n      errors.koreanid = \"IDKoreanNotAllowed\";\r\n    }\r\n    else if ((name === \"id\" && value.length < 6) || (name === \"id\" && value.length > 10)) {\r\n      errors.id = \"Please enter 6-10 characters\";\r\n      errors.koreanid = \"IDLength\";\r\n    }\r\n    else  if (name === \"id\") {\r\n      errors.id = \"\";\r\n      errors.koreanid = \"\";\r\n    }\r\n    \r\n\r\n\r\n    //  Password Validation\r\n\r\n    if (name === \"password\" && value === \"\") {\r\n      errors.password = \"Password should contain atleast 9 charecters\";\r\n      errors.koreanpassword = \"PasswordLength\";\r\n    }\r\n    else if (name === \"password\" && KoreanRegex.test(value)) {\r\n      errors.password = \"Korean is not allowed\";\r\n      errors.koreanpassword = \"KoreanPasswordNotAvailable\";\r\n    }\r\n    else if (name === \"password\" && !passwordValidator(value)) {\r\n      errors.password = \"The password should be more than 9 and lessthan 20 characters(contain at least three character categories among the following: uppercase, lowercase, numeric, or special character)\";\r\n      errors.koreanpassword = \"DefaultPasswordMsg\";\r\n    }\r\n\r\n    else if (name === \"password\") {\r\n      errors.password = \"\";\r\n      errors.koreanpassword = \"\";\r\n    }\r\n\r\n\r\n    const password_is = form.password;\r\n\r\n    //  Verify Password Validation\r\n\r\n    if (name === \"verify_password\" && value === \"\") {\r\n      errors.verify_password = \"Please verify Password\";\r\n      errors.koreanverify_password = \"EnterVerifyPassword\";\r\n    } else if (name === \"verify_password\" && value !== password_is) {\r\n      errors.verify_password = \"verify password should be same as password\";\r\n      errors.koreanverify_password = \"VerifyPassword\";\r\n    } else if (name === \"verify_password\" && value === password_is) {\r\n      errors.verify_password = \"\";\r\n      errors.koreanverify_password = \"\";\r\n    }\r\n\r\n    //  Name Validation\r\n\r\n    if (name === \"name\" && value === \"\") {\r\n      errors.name = \"Please Enter your Name\";\r\n      errors.koreanname = \"Name\";\r\n    }\r\n\r\n    else if (name === \"name\" && nameValidator(value)) {\r\n      errors.name = \"Enter a Valid Name\";\r\n      errors.koreanname = \"ValidName\";\r\n    }\r\n    else if (name === \"name\" && value !== \"\") {\r\n      errors.name = \"\";\r\n      errors.koreanname = \"\";\r\n    }\r\n\r\n\r\n\r\n    // Institue Validation\r\n\r\n    if (name === \"institute\" && value === \"--Select--\") {\r\n      errors.institute = \"Please Select any Institute\";\r\n      errors.koreaninstitute = \"Organization\";\r\n    } else if (name === \"institute\" && value === \"\") {\r\n      errors.institute = \"Please Select any Institute\";\r\n      errors.koreaninstitute = \"Organization\";\r\n    } else if (name === \"institute\") {\r\n      errors.institute = \"\";\r\n      errors.koreaninstitute = \"\";\r\n    }\r\n\r\n    // Phone Number Validation\r\n\r\n    if (name === \"phone_number\" && value === \"\") {\r\n      errors.phone_number = \"Please Enter Phone Number\";\r\n      errors.koreanphone_number = \"EnterPhoneNumber\";\r\n    }\r\n    else if (name === \"phone_number\" && !NumRegex.test(value)) {\r\n      errors.phone_number = \"Please Enter Valid Phone Number\";\r\n      errors.koreanphone_number = \"EnterValidPhoneNumber\";\r\n    }\r\n\r\n    else if (\r\n      name === \"phone_number\" &&\r\n      (value.length > 20)\r\n    ) {\r\n      errors.phone_number = \"Please Enter less than 20 Numbers\";\r\n      errors.koreanphone_number = \"PhoneNumberNoOfDigits\";\r\n    }\r\n    // else if (\r\n    //   name === \"phone_number\" &&\r\n    //   (value.length > 20 || value.length < 12)\r\n    // ) {\r\n    //   errors.phone_number = \"Please Enter less than 12-15 Numbers\";\r\n    //   errors.koreanphone_number = \"PhoneNumberNoOfDigits\";\r\n    // }\r\n    else if (name === \"phone_number\") {\r\n      errors.phone_number = \"\";\r\n      errors.koreanphone_number = \"\";\r\n    }\r\n\r\n\r\n    // Email Validation\r\n\r\n    if (name === \"email\" && value === \"\") {\r\n      setEmailExist(\"\")\r\n      errors.email = \"Please Enter your EmailID\";\r\n      errors.koreanemail = \"EnterEmailID\";\r\n    }\r\n    else if (name === \"email\" && !AlphaNumRegexwithSpecialCharsExceptDot.test(value)) {\r\n      errors.email = \"Please valid EmailID\";\r\n      errors.koreanemail = \"EnterValidEmailID\";\r\n    }\r\n    else if (name === \"email\") {\r\n      errors.email = \"\";\r\n      errors.koreanemail = \"\";\r\n    }\r\n\r\n\r\n    // Domain Validation \r\n\r\n    if (name === \"domain_email\" && value === \"option\") {\r\n      errors.domain_email = \"Please Select Domain\";\r\n      errors.koreandomain_email = \"SelectEmailDomain\";\r\n    } else if (name === \"domain_email\" && value === \"\") {\r\n      errors.domain_email = \"Please Select Domain\";\r\n      errors.koreandomain_email = \"SelectEmailDomain\";\r\n    } else if (name === \"domain_email\") {\r\n      errors.domain_email = \"\";\r\n      errors.koreandomain_email = \"\";\r\n    }\r\n\r\n\r\n    // Verification\r\n\r\n    if (name === \"verification\" && value === \"\") {\r\n      errors.verification = \"Please Select anyone verification \";\r\n      errors.koreanverification = \"Verification\";\r\n    }\r\n    if (name === \"verification\" && value !== \"\") {\r\n      errors.verification = \"\";\r\n      errors.koreanverification = \"\";\r\n    }\r\n\r\n    form.errors = errors;\r\n  };\r\n\r\n  const chekcId = () => {\r\n    if (form[\"id\"]) {\r\n      let data = {\r\n        value: form[\"id\"],\r\n        type: \"username\",\r\n      };\r\n      dispatch(checkUserName(\"GET\", data));\r\n    }\r\n  };\r\n\r\n  const checkEmailExist = () => {\r\n    let email = `${form.email}@${form.domain_email}`\r\n    dispatch(checkEmail(\"POST\", { \"email_id\": email }))\r\n  };\r\n\r\n  const verifyMobile = (e) => {\r\n    \r\n    setClickMobileverifyButton(true);\r\n    setClickEmailverifyButton(false);\r\n    dispatch(getPassEncodeId(\"GET\", { 'mobile': form['phone_number'] }));\r\n  };\r\n\r\n  const checkMobileVerified = (e) => {\r\n    console.log(form)\r\n    dispatch(checkMobile(\"POST\",{'mobile_no':form['phone_number']}))\r\n    // var ncm = {}\r\n    // if(ncm ){\r\n    //   setRegistrationClass(true)\r\n    //   setForm((oldState) => ({ ...oldState, ['isVerified']: true }));\r\n    //   setForm((oldState) => ({ ...oldState, ['mobileVerified']: true }));\r\n    // }\r\n  }\r\n  useEffect(()=>{\r\n    if(mobile_verified && mobile_verified['status']===true){\r\n      console.log(mobile_verified)\r\n      let f = form\r\n      f.isVerified = true\r\n      f.mobileVerified= true\r\n      setForm({...f})\r\n      // setRegistrationClass(true)\r\n      // setForm((oldState) => ({ ...oldState, ['mobileVerified']: true }));\r\n      // setForm((oldState) => ({ ...oldState, ['isVerified']: true }));\r\n\r\n    }\r\n  },[mobile_verified])\r\n\r\n\r\n  const verifyEmail = (e) => {\r\n    if (form.email === \"\" || form.domain_email === \"\") {\r\n      // isEmailExist.status = \"\"\r\n      setEmailExist(\"\")\r\n      setEmailStatus(false);\r\n      setForm((prevState) => ({\r\n        ...prevState,\r\n        errors: {\r\n          ...prevState.errors,\r\n          email: \"Please Enter valid EmailID\",\r\n          koreanemail: \"EnterValidEmailID\",\r\n          domain_email: \"Please Select Domain\",\r\n          koreandomain_email: \"SelectEmailDomain\"\r\n\r\n        }\r\n      }))\r\n    }\r\n\r\n    else if (emailExist && emailExist === \"Email is Not Registered\") {\r\n      let email = `${form.email}@${form.domain_email}`\r\n      dispatch(sendEmail(\"POST\", { 'email_id': email, 'send_otp': true }));\r\n      setForm((prevState) => ({\r\n        ...prevState,\r\n        errors: {\r\n          ...prevState.errors,\r\n          email: \"\",\r\n          koreanemail: \"\",\r\n          domain_email: \"\",\r\n          koreandomain_email: \"\"\r\n\r\n        }\r\n      }))\r\n      setEmailStatus(true);\r\n      setClickEmailverifyButton(true);\r\n      setClickMobileverifyButton(false);\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  const gotopreviousStep = () => {\r\n    changestep(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let instituteOptionsKorean = [\r\n      '정부기관',\r\n      '대학기관',\r\n      '연구센터',\r\n      '병원',\r\n      '산업',\r\n      '그 외'\r\n    ]\r\n    let instituteOptions = [\r\n      \"GOVERNMENT\",\r\n      \"UNIVERSITY\",\r\n      \"RESEARCH CENTER\",\r\n      \"HOSPITAL\",\r\n      \"INDUSTRY\",\r\n      \"OTHERS\",\r\n    ];\r\n    let html = [];\r\n    for (let i = 0; i < instituteOptions.length; i++) {\r\n      html.push(\r\n        <option key={instituteOptions[i]} value={instituteOptions[i]}>\r\n          {koreanlanguage ? instituteOptionsKorean[i] : instituteOptions[i]}\r\n        </option>\r\n      );\r\n    }\r\n    setInstituteDropdown(html);\r\n  }, [koreanlanguage, Englishlanguage]);\r\n\r\n  useEffect(() => {\r\n    if (regitserResponse) {\r\n      setMessage(regitserResponse[\"message\"]);\r\n    }\r\n  }, [regitserResponse]);\r\n\r\n  useEffect(() => {\r\n    if (encData !== '') {\r\n      window.open('', 'popupChk', 'width=500, height=550, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no');\r\n      document.form_chk.action = \"https://nice.checkplus.co.kr/CheckPlusSafeModel/checkplus.cb\";\r\n      document.form_chk.target = \"popupChk\";\r\n      document.form_chk.submit();\r\n    }\r\n  }, [encData])\r\n\r\n  useEffect(() => {\r\n    if (passKey) {\r\n      setEncData(passKey[\"enc_data\"]);\r\n    }\r\n  }, [passKey]);\r\n\r\n  useEffect(() => {\r\n    if (otp_verification_status && otp_verification_status.status === true) {\r\n      setRegistrationClass(true)\r\n      form.emailVerified = true\r\n      setotpStatus(true);\r\n    }\r\n  }, [otp_verification_status]);\r\n\r\n  useEffect(() => {\r\n    if (registration_status && otp_verification_status.message === 'Registered Successfully') {\r\n      changestep(2)\r\n    }\r\n    else if (registration_status && otp_verification_status.message === 'User already exists') {\r\n\r\n      swal(\"User Already Exists\", {\r\n        closeOnClickOutside: false\r\n      })\r\n        .then((value) => {\r\n          setTimeout(() => {\r\n\r\n            // window.location.href = '/login/'\r\n          }, 2000)\r\n        });\r\n    }\r\n  }, [registration_status]);\r\n\r\n  useEffect(() => { \r\n    console.log('----from usefeff')\r\n    console.log(form)\r\n    setRegistrationClass(form.isVerified)\r\n  }, [form.isVerified])\r\n\r\n  const CheckVerificationCode = (e) => {\r\n    let otp = form.otp;\r\n    let email = `${form.email}@${form.domain_email}`\r\n    dispatch(verifyOTP(\"POST\", { 'email_id': email, 'otp': otp }));\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n      <section className=\"mt-10 flex flex-col items-center justify-center\" >\r\n        <div>\r\n          <span className=\"text-6xl font-bold text-gray-800\">\r\n          {koreanlanguage ? '회원가입': 'Join membership'}\r\n          </span>\r\n        </div>\r\n        <div className=\"my-14\">\r\n          <h1 className=\"font-light text-3xl text-gray-800\">\r\n            {koreanlanguage ? '회원가입 후 서비스를 이용해주세요.' : 'Please use the service after registering as a member.'}\r\n          </h1>\r\n        </div>\r\n        <div className=\"my-6\">\r\n          {message && (\r\n            <h3 className=\"font-light text-3xl text-blue-800\">{message}</h3>\r\n          )}\r\n        </div>\r\n        <div className=\"border-t-2 border-gray-600 w-4/6\" >\r\n          <div className=\"grid grid-cols-4\">\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-10 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? '아이디' : 'ID'}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300  gap-3\">\r\n              <div className=\"grid grid-cols-3\">\r\n                <div className=\"col-span-2 inline-flex\">\r\n                  <div className=\"mb-3 pt-0\">\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"username\"\r\n                      value={form[\"id\"]}\r\n                      name=\"id\"\r\n                      onChange={formSet}\r\n                      className={\r\n                        (checkUserId ? \" border-red-400 \" : \"  \") +\r\n                        \"px-4 py-4 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <button\r\n                    onClick={chekcId}\r\n                    className=\"bg-main-blue hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white ml-2 font-bold py-2 px-4 border border-blue-700 rounded\"\r\n                  >\r\n                    {koreanlanguage ?\"아이디 확인\" : \"Check Id\"}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <p></p>\r\n                {checkUserId && (\r\n                  <span className=\"text-red-500 text-md\">\r\n                    User Id Already exists\r\n                  </span>\r\n                )}\r\n                {!form.errors.id && (\r\n                  <span className=\"text-gray-700 text-sm lh-2\">\r\n                    <FormattedMessage\r\n                      id=\"DefaultIDMsg\"\r\n                      defaultMessage={\"ID should be combination of capital/lowercase alphabets and numbers in 6-10 letters. Koreans and special symbols are not allowed\"}\r\n                    />\r\n                  </span>\r\n                )}\r\n                {form.errors.id && (\r\n                  <span className=\"text-red-500 text-sm\">\r\n                    <FormattedMessage\r\n                      id={form.errors.koreanid}\r\n                      defaultMessage={form.errors.id}\r\n                    />\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? '비밀번호' : 'Password'}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300\">\r\n              <div className=\"mb-3 pt-0 relative\">\r\n                <input\r\n                  type={visibility ? \"input\" : \"password\"}\r\n                  value={form[\"password\"]}\r\n                  id=\"PasswordField\"\r\n                  name=\"password\"\r\n                  onChange={formSet}\r\n                  className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded  border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                />\r\n                <span className=\"absolute cursor-pointer left-80 top-2\" > {visibility ? <EyeIcon className=\"h-14 w-12 inline text-main-white\" onClick={() => setvisibility(visibility => !visibility)}></EyeIcon> : <EyeOffIcon className=\"h-14 w-12 inline text-main-white\" onClick={() => setvisibility(visibility => !visibility)}></EyeOffIcon>}</span>\r\n\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                {/* <div>\r\n                  <span className=\"text-red-500 text-md\">\r\n                    * It is less than 10-20 digits and is stored encrypted.\r\n                  </span>\r\n                </div> */}\r\n                <div>\r\n                  {!form.errors.password && (\r\n                    <span className=\"text-gray-700 text-sm\">\r\n                      <FormattedMessage\r\n                        id=\"DefaultPasswordMsg\"\r\n                        defaultMessage=\"The password should be more than 9 and less\r\n                        than 20 characters (contain at least three character categories among the\r\n                        following: uppercase, lowercase, numeric, or special character)\"\r\n                      />\r\n                    </span>\r\n                  )}\r\n\r\n                  {form.errors.password && (\r\n                    <span className=\"text-red-500 text-sm\">\r\n                      <FormattedMessage\r\n                        id={form.errors.koreanpassword}\r\n                        defaultMessage={form.errors.password}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? '비밀번호 확인' : 'Verify Password'}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300\">\r\n              <div className=\"mb-3 pt-0 relative\">\r\n                <input\r\n                  type={visibility ? \"input\" : \"password\"}\r\n                  value={form[\"verify_password\"]}\r\n                  name=\"verify_password\"\r\n                  onChange={formSet}\r\n                  className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                />\r\n                <span className=\"absolute cursor-pointer left-80 top-2\" > {visibility ? <EyeIcon className=\"h-14 w-12 inline text-main-white\" onClick={() => setvisibility(visibility => !visibility)}></EyeIcon> : <EyeOffIcon className=\"h-14 w-12 inline text-main-white\" onClick={() => setvisibility(visibility => !visibility)}></EyeOffIcon>}</span>\r\n\r\n              </div>\r\n              {form.errors.verify_password && (\r\n                <span className=\"text-red-500 text-sm\">\r\n                  <FormattedMessage\r\n                    id={form.errors.koreanverify_password}\r\n                    defaultMessage={form.errors.verify_password}\r\n                  />\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? '이름' : 'Name'}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300\">\r\n              <div className=\"mb-3 pt-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={form[\"name\"]}\r\n                  name=\"name\"\r\n                  onChange={formSet}\r\n                  className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                />\r\n              </div>\r\n              {form.errors.name && (\r\n                <span className=\"text-red-500 text-sm\">\r\n                  <FormattedMessage\r\n                    id={form.errors.koreanname}\r\n                    defaultMessage={form.errors.name}\r\n                  />\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? '기관' : 'ORGANIZATION'}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300\">\r\n              <div className=\"mb-3 pt-0\">\r\n                <select\r\n                  className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                  name=\"institute\"\r\n                  onChange={formSet}\r\n                >\r\n                  <option>{koreanlanguage ? \"--선택--\" : \"--Select--\"}</option>\r\n                  {instituteDropdown}\r\n                </select>\r\n              </div>\r\n              {form.errors.institute && (\r\n                <span className=\"text-red-500 text-sm\">\r\n                  <FormattedMessage\r\n                    id={form.errors.koreaninstitute}\r\n                    defaultMessage={form.errors.institute}\r\n                  />\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? \"휴대폰 번호\": \"Phone number\"}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300 inline-flex gap-3\">\r\n              <div className=\"pt-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={form[\"phone_number\"]}\r\n                  name=\"phone_number\"\r\n                  onChange={formSet}\r\n                  // className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded text-sm border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                  className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                />\r\n                <div>\r\n                  {\" \"}\r\n                  {form.errors.phone_number && (\r\n                    <span className=\"text-red-500 text-sm\">\r\n                      <FormattedMessage\r\n                        id={form.errors.koreanphone_number}\r\n                        defaultMessage={form.errors.phone_number}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              <span className=\"font-bold\">{koreanlanguage ? \"이메일\" : \"E-mail\"}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 border-gray-300 inline-flex\">\r\n              <div className=\"mb-3 pt-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={form[\"email\"]}\r\n                  name=\"email\"\r\n                  onChange={formSet}\r\n                  className=\"px-4 py-4 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                />\r\n                <div>\r\n                  {form.errors.email && (\r\n                    <span className=\"text-red-500 text-sm\">\r\n                      <FormattedMessage\r\n                        id={form.errors.koreanemail}\r\n                        defaultMessage={form.errors.email}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                  <br></br>\r\n                  {emailExist && (\r\n                    <span className={`text-red-500 text-sm ${emailExist === 'Email is Already Registerd' ? '' : 'hidden'}`}\r\n                    >\r\n                      {emailExist === 'Email is Already Registerd' ? 'Email Already exists' : ''}\r\n                    </span>\r\n                  )}\r\n\r\n                </div>\r\n              </div>\r\n              <h1 className=\"p-3\">@</h1>\r\n              <div className=\"mb-3 pt-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={form[\"domain_email\"]}\r\n                  name=\"domain_email\"\r\n                  onChange={formSet}\r\n                  disabled={inputmail ? \"\" : \"disabled\"}\r\n                  className=\"px-4 py-4 w-48 text-blueGray-600 relative bg-white rounded border border-gray-400 outline-none focus:outline-none focus:ring\"\r\n                />\r\n                <div>\r\n                  {form.errors.domain_email && (\r\n                    <span className=\"text-red-500 text-sm\">\r\n                      <FormattedMessage\r\n                        id={form.errors.koreandomain_email}\r\n                        defaultMessage={form.errors.domain_email}\r\n                      />\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <select\r\n                name=\"domain_email\"\r\n                onChange={formSet}\r\n                className=\"ml-3 border border-gray-300 px-4 py-3 h-16 rounded focus:outline-none focus:ring\"\r\n              >\r\n                <option value=\"option\">Option</option>\r\n                <option value=\"naver.com\">naver.com</option>\r\n                <option value=\"gmail.com\">gmail.com</option>\r\n                <option value=\"daum.com\">daum.net</option>\r\n                <option value=\"input\">Direct input</option>\r\n              </select>\r\n\r\n              <button\r\n                onClick={checkEmailExist}\r\n                className=\"bg-main-blue hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white ml-2 font-bold py-2 px-4 border border-blue-700 rounded\"\r\n              >\r\n                {koreanlanguage ? \"이메일 확인\" : \"Check Email\"}\r\n              </button>\r\n            </div>\r\n\r\n            {/* Verification Row */}\r\n            <div className=\"col-span-1 bg-gray-200 bg-gray-200 p-8 border-b-2 border-gray-300\">\r\n              {/* <p>need to remove invsible</p> span*/}\r\n              <span className=\"font-bold\">{koreanlanguage ?\"인증\": \"Verification\"}</span>\r\n              <span className=\"text-red-500\">*</span>\r\n            </div>\r\n\r\n            <div className=\"col-span-3 p-8 bg-white border-b-2 inline-flex flex-column  border-gray-300\">\r\n              <div className=\"\">\r\n                <div className=\"\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"mobile_verification\"\r\n                    name=\"verification\"\r\n                    value=\"mobile\"\r\n                    className=\"mt-5\"\r\n                    onChange={formSet}\r\n                  />&nbsp;\r\n                  <label htmlFor=\"mobile_verification\">{koreanlanguage ? \"휴대폰\" : \"Mobile\"}</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"email_verification\"\r\n                    name=\"verification\"\r\n                    value=\"email\"\r\n                    className=\"mt-5 ml-5\"\r\n                    onChange={formSet}\r\n                  />&nbsp;\r\n                  <label htmlFor=\"email_verification\">{koreanlanguage ? \"이메일\" : \"Email\"}</label>\r\n                  <br />\r\n                </div>\r\n\r\n                {/* <div>\r\n                  {form.errors.verification && (\r\n                    <span className=\"text-red-500 text-sm mt-2\">\r\n                      {errors[\"verification\"]}\r\n                    </span>\r\n                  )}\r\n                </div> */}\r\n              </div>\r\n\r\n              <div>\r\n                {verificationState === \"mobile\" && !ClickMobileverifyButton &&(\r\n                  <button\r\n                    onClick={(e) => verifyMobile(e)}\r\n                    className=\"bg-main-blue mt-2 hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white ml-2 font-bold py-2 px-4 border border-blue-700 rounded\"\r\n                  >\r\n                     {koreanlanguage ? \"모바일 인증\" : \"Verify Mobile\"}\r\n                  </button>\r\n                )}\r\n                {verificationState ===\"mobile\" && ClickMobileverifyButton \r\n                  && (\r\n                    <button\r\n                      onClick={(e)=>checkMobileVerified(e)}\r\n                      className=\"bg-main-blue mt-2 hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white ml-2 font-bold py-2 px-4 border border-blue-700 rounded\"\r\n                    >\r\n                    {koreanlanguage ? \"확인 확인\" : \"Verify Mobile\"}</button>\r\n                  )\r\n                }\r\n              </div>\r\n              <div>\r\n                {emailExist === \"Email is Not Registered\" && verificationState === \"email\" && (\r\n                  <button\r\n                    className=\"bg-main-blue mt-2 hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white ml-2 font-bold py-2 px-4 border border-blue-700 rounded h-11\"\r\n                    onClick={(e) => verifyEmail(e)}\r\n                  >\r\n                    {koreanlanguage ? \"이메일 확인\" : \"Verify Email\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              {emailExist === \"Email is Not Registered\" && form[\"verification\"] === \"email\" &&\r\n                ClickEmailverifyButton &&\r\n                !ClickMobileverifyButton && (\r\n                  <>\r\n                    <div className=\"d-flex flex-row\">\r\n                      <div className=\"mb-3 mx-2 pt-0\">\r\n                        <input type=\"text\" className=\"px-4 py-4 mt-2  \r\n                        text-blueGray-600 relative bg-white rounded border \r\n                        border-gray-400 outline-none focus:outline-none focus:ring w-80\"\r\n                          value={form[\"otp\"]}\r\n                          id=\"OTP_is\"\r\n                          name=\"otp\"\r\n                          onChange={formSet}\r\n                        />\r\n                      </div>\r\n                      <>\r\n                        <button onClick={(e) =>\r\n                          CheckVerificationCode(e)\r\n                        } className=\"bg-main-blue mt-2 hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white ml-2 font-bold py-2 px-4 border border-blue-700 rounded w-48 h-12\">\r\n                          Check verification code\r\n                        </button>\r\n                      </>\r\n                    </div>\r\n                    <p className=\"text-warning\">\r\n                      Please Enter the Code you have recieved in your Email\r\n                    </p>\r\n                  </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <form name=\"form_chk\" method=\"post\">\r\n          <input type=\"hidden\" name=\"m\" value=\"checkplusSerivce\" />\r\n          <input type=\"hidden\" name=\"EncodeData\" value={encData} />\r\n        </form>\r\n\r\n        <div className=\"inline-flex gap-2  my-6\">\r\n          <button\r\n            className=\"hover:bg-blue-700 text-white font-bold py-6 px-6 float-left rounded bg-NccBlue-700\"\r\n            onClick={gotopreviousStep}\r\n          >\r\n            {koreanlanguage ? '뒤로가기' : 'Back'}\r\n          </button>\r\n\r\n          <button\r\n            className={`text-white font-bold py-6 px-6  float-right rounded ${RegistrationClass === true\r\n              ? \"bg-NccBlue-700 hover:bg-blue-700\"\r\n              : \"bg-grey-700 \"\r\n              }`}\r\n            onClick={register_user}\r\n          // disabled={form.isVerified === true ? false : true}\r\n          >\r\n            {koreanlanguage ? '등록' : 'Registration'}\r\n          </button>\r\n        </div>\r\n      </section >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default MemberShip;\r\n"],"sourceRoot":""}