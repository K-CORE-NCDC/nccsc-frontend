{"version":3,"sources":["actions/Constants.js","actions/api_actions.js","App/layout/Loader/index.js","config.js","wrapper.js","assets/interceptor/LocalStorageService.js","assets/interceptor/interceptor.js","App/PrivateRoute.js","App/index.js","reducers/home.reducer.js","reducers/datavisualisation.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["homeConstants","HOME_REQUEST","DATA_SUMMARY","DATA_COUNT","GENOMIC_INFORMATION","USERDATA_VISUALIZATION","NEWUSERDATA_VISUALIZATION","CLEARNEWUSERDATA_VISUALIZATION","UPLOAD_CLININCAL_COLUMNS","CLEAR_UPLOAD_CLININCAL_COLUMNS","NEWUSERDATA_VISUALIZATION_ERROR","USERDATA_VISUALIZATION_ERROR","APPLICATION_LANGUAGE","FILE_REQUEST","DATA_FAQ","DATA_NOTICE","DATA_QA","NOTICE_DETAILS","OTP_REQUEST","OTP_VALIDATION","FIND_ID","FIND_PASSWORD","REQUEST_DONE","VERIFY_ENCODE","CHANGE_PASSWORD","CLEAR_ID_PASSWORD_RESET_PASSWORD","CHECK_EMAIL","REGISTRATION","INTERPRO","VCFMAF","LOGMANAGEMENT","SENDLOGMANAGEMENT","CHECK_MOBILE","CLEAR_NOTICE_DETAILS","dataVisualization","CIRCOS_REQUEST","ONCO_REQUEST","KEYS_REQUEST","LOLLIPOP_REQUEST","VOLCANO_REQUEST","USER_DEFINED_VOLCANO_REQUEST","HEATMAP_REQUEST","HEATMAP_REQUEST_STATUS_CODE","CIRCOS_SAMPLES_RNID","SURVIVAL_REQUEST","SCATTER_REQUEST","IGV_REQUEST","FUSION_REQUEST","CHECK_GENE_FUSION_REQUEST","BOX_REQUEST","ONCO_IMAGES_INFORMATION","CIRCOS_TIMELINE_GRAPH","REGISTER_REQUEST","KMEAN_REQUEST","CLINICALMAXMIN_REQUEST","CHECK_USER","PASS_ENCODE_ID","RNI_DATA","FUSIONVENN_REQUEST","FUSIONVENN_CLEAR","FUSIONVENN_RNID","FUSION_EXON_REQUEST","SANKEYJSON_REQUEST","FUSIONTABLE_REQUEST","UPDATE_DOWNLOAD_VISUALIZATION_PURPOSE","PDF_REPORT","SAMPLES_COUNT","CLEAR_PDF_LINK","CLEAR_CIRCOS_INFORMATION","CLEAR_SURVIVAL_IMAGE","userdataVisualization","USER_DATA_PROJECT_TABLE","USER_DATA_PROJECT_TABLE_PROJECT","USER_DEFINED_FILTER","CLEAR_ALL_STATES","sendRequest","url","method","data","axios","clearIDPasswordResetPASSWORD","dispatch","type","payload","sendlogManagement","config","auth","then","result","d","catch","e","samplesCount","status","sendEmail","verifyOTP","findID","interPro","formData","FormData","append","vcfmaf","findPassword","checkEmail","checkMobile","changePassword","verifyEncodeData","encodeURI","getNoticeDetail","getDashboardCount","getRNIDetails","getDashboardDsummaryData","getGenomicInformation","getOncoInformation","getLolipopInformation","domains","getFusionVennDaigram","clearFusionVennDaigram","getClinicalMaxMinInfo","getSankeyJson","getVolcanoPlotInfo","getHeatmapInformation","loader","new_file_upload","fileData","projectName","Object","keys","forEach","element","undefined","file","set","clear_new_file_upload_state","clear_upload_clinical_columns","uploadClinincalSamples","getCircosInformation","clearCircosInfomation","getSurvivalInformation","getIgv","getBreastKeys","tmp","i","length","getUserDataProjectsTableData","project","sankeyImageData","sendReportData","clearPdfLink","getScatterInformation","getFusionExons","getFusionInformation","getBoxInformation","getOncoImages","getCircosTimelineTable","getPassEncodeId","r","checkUserName","userRegister","clearDataVisualizationState","fetchProjectTableData","getUserDefinedFilter","updateDownloadVisualizationPurpose","languageChange","getFaqData","id","getNoticeData","getQaData","request","clearProjectTableDataTableData","Loading","props","isLoading","timedOut","pastDelay","error","defaultPath","basename","media","lang","Context","React","createContext","local","English","Wrapper","useState","locale","setLocale","messages","setMessages","useDispatch","Provider","value","selectLanguage","newLocale","target","Korea","defaultLocale","children","LocalStorageService","_service","getService","this","setToken","tokenObj","localStorage","setItem","access","refresh","getAccessToken","getItem","getRefreshToken","clearToken","removeItem","localStorageService","interceptors","use","token","headers","Promise","reject","response","originalRequest","_retry","post","res","defaults","common","window","location","reload","PrivateRoute","Component","component","rest","render","require","Web","Loadable","loading","Loader","delay","App","blurScreenCss","className","fallback","exact","path","homeReducer","state","dataCount","dataSummary","genomicData","fileUploadData","newFileUploadData","uploadClinicalColumns","remaining","remaining_clinical_columns","newFileUploadStatus","fileUploadStatus","languageReducer","dataFaq","dataNotice","dataQA","noticedata","emailsentstatus","otp_validation_status","find_id","find_password","registration_status","change_password_status","is_email_exist","verifyMobile","interpro","logmanagement","mobileVerified","sendlogmanagement","remains","dataVisualizationReducer","circosSummary","restt","oncoSummary","Keys","lollipopSummary","volcanoSummary","userDefinedVolcanoSummary","heatmapSummary","heatmapSummaryStatusCode","survivalSummary","igvSummary","userProjectsDataTable","circosSanpleRnidListData","scatterData","fusionGenes","fusionData","boxData","oncoSampleImagesData","circosTimelieTableData","passKey","registerData","kmeanSummary","clinicalMaxMinInfo","rniData","VennData","ExonData","VennRnid","SankeyJson","FusionTable","userDataProjectTable","userDefinedFilter","UpdateDownloadVisualizationPurpose","PDF_Report","rootReducer","combineReducers","loggerMiddleware","createLogger","store","thunk","createStore","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3af4180b.chunk.js","sourcesContent":["export const homeConstants = {\r\n  HOME_REQUEST: 'HOME_PAGE_REQUEST',\r\n  DATA_SUMMARY: 'DATA_SUMMARY',\r\n  DATA_COUNT: 'DATA_COUNT',\r\n  GENOMIC_INFORMATION: \"GENOMIC_INFORMATION\",\r\n  USERDATA_VISUALIZATION: \"USERDATA_VISUALIZATION\",\r\n  NEWUSERDATA_VISUALIZATION: \"NEWUSERDATA_VISUALIZATION\",\r\n  CLEARNEWUSERDATA_VISUALIZATION:\"CLEARNEWUSERDATA_VISUALIZATION\",\r\n  UPLOAD_CLININCAL_COLUMNS:\"UPLOAD_CLININCAL_COLUMNS\",\r\n  CLEAR_UPLOAD_CLININCAL_COLUMNS:\"CLEAR_UPLOAD_CLININCAL_COLUMNS\",\r\n  NEWUSERDATA_VISUALIZATION_ERROR: \"NEWUSERDATA_VISUALIZATION_ERROR\",\r\n  USERDATA_VISUALIZATION_ERROR: \"USERDATA_VISUALIZATION_ERROR\",\r\n  APPLICATION_LANGUAGE: \"APPLICATION_LANGUAGE\",\r\n  FILE_REQUEST: \"FILE_REQUEST\",\r\n  DATA_FAQ: \"DATA_FAQ\",\r\n  DATA_NOTICE: \"DATA_NOTICE\",\r\n  DATA_QA: \"DATA_QA\",\r\n  NOTICE_DETAILS: \"NOTICE_DETAILS\",\r\n  OTP_REQUEST: \"OTP_REQUEST\",\r\n  OTP_VALIDATION: \"OTP_VALIDATION\",\r\n  FIND_ID: \"FIND_ID\",\r\n  FIND_PASSWORD: \"FIND_PASSWORD\",\r\n  REQUEST_DONE: 'REQUEST_DONE',\r\n  VERIFY_ENCODE: \"VERIFY_ENCODE\",\r\n  CHANGE_PASSWORD: \"CHANGE_PASSWORD\",\r\n  CLEAR_ID_PASSWORD_RESET_PASSWORD: \"CLEAR_ID_PASSWORD_RESET_PASSWORD\",\r\n  CHECK_EMAIL: \"CHECK_EMAIL\",\r\n  REGISTRATION:\"REGISTRATION\",\r\n  INTERPRO : \"INTERPRO\",\r\n  VCFMAF:\"VCFMAF\",\r\n  LOGMANAGEMENT:\"LOGMANAGEMENT\",\r\n  SENDLOGMANAGEMENT:\"SENDLOGMANAGEMENT\",\r\n  CHECK_MOBILE:\"CHECK_MOBILE\",\r\n  CLEAR_NOTICE_DETAILS : \"CLEAR_NOTICE_DETAILS\"\r\n  // PROJECT_ID:\"PROJECT_ID\"\r\n}\r\n\r\nexport const dataVisualization = {\r\n  CIRCOS_REQUEST: 'CIRCOS_DATA_REQUEST',\r\n  ONCO_REQUEST: 'ONCO_REQUEST',\r\n  KEYS_REQUEST: 'KEYS_REQUEST',\r\n  REQUEST_DONE: 'REQUEST_DONE',\r\n  LOLLIPOP_REQUEST: 'LOLLIPOP_REQUEST',\r\n  VOLCANO_REQUEST: 'VOLCANO_REQUEST',\r\n  USER_DEFINED_VOLCANO_REQUEST: 'USER_DEFINED_VOLCANO_REQUEST',\r\n  HEATMAP_REQUEST: 'HEATMAP_REQUEST',\r\n  HEATMAP_REQUEST_STATUS_CODE: 'HEATMAP_REQUEST_STATUS_CODE',\r\n  CIRCOS_SAMPLES_RNID: 'CIRCOS_SAMPLES_RNID',\r\n  SURVIVAL_REQUEST:\"SURVIVAL_REQUEST\",\r\n  SCATTER_REQUEST:\"SCATTER_REQUEST\",\r\n  IGV_REQUEST:\"IGV_REQUEST\",\r\n  FUSION_REQUEST:\"FUSION_REQUEST\",\r\n  CHECK_GENE_FUSION_REQUEST:\"CHECK_GENE_FUSION_REQUEST\",\r\n  BOX_REQUEST:\"BOX_REQUEST\",\r\n  ONCO_IMAGES_INFORMATION:\"ONCO_IMAGES_INFORMATION\",\r\n  CIRCOS_TIMELINE_GRAPH: \"CIRCOS_TIMELINE_GRAPH\",\r\n  REGISTER_REQUEST:\"REGISTER_REQUEST\",\r\n  KMEAN_REQUEST:\"KMEAN_REQUEST\",\r\n  CLINICALMAXMIN_REQUEST:\"CLINICALMAXMIN_REQUEST\",\r\n  CHECK_USER:\"CHECK_USER\",\r\n  PASS_ENCODE_ID:\"PASS_ENCODE_ID\",\r\n  RNI_DATA:\"RNI_DATA\",\r\n  FUSIONVENN_REQUEST:\"FUSIONVENN_REQUEST\",\r\n  FUSIONVENN_CLEAR:\"FUSIONVENN_CLEAR\",\r\n  FUSIONVENN_RNID:\"FUSIONVENN_RNID\",\r\n  FUSION_EXON_REQUEST:\"FUSION_EXON_REQUEST\",\r\n  SANKEYJSON_REQUEST:\"SANKEYJSON_REQUEST\",\r\n  FUSIONTABLE_REQUEST:\"FUSIONTABLE_REQUEST\",\r\n  UPDATE_DOWNLOAD_VISUALIZATION_PURPOSE:'UPDATE_DOWNLOAD_VISUALIZATION_PURPOSE',\r\n  PDF_REPORT:\"PDF_REPORT\",\r\n  SAMPLES_COUNT:\"SAMPLES_COUNT\",\r\n  CLEAR_PDF_LINK:\"CLEAR_PDF_LINK\",\r\n  CLEAR_CIRCOS_INFORMATION:\"CLEAR_CIRCOS_INFORMATION\",\r\n  CLEAR_SURVIVAL_IMAGE:\"CLEAR_SURVIVAL_IMAGE\"\r\n}\r\n\r\n\r\nexport const userdataVisualization = {\r\n  CIRCOS_REQUEST: 'CIRCOS_DATA_REQUEST',\r\n  ONCO_REQUEST:'ONCO_REQUEST',\r\n  VOLCANO_REQUEST:'VOLCANO_REQUEST',\r\n  REQUEST_DONE:'REQUEST_DONE',\r\n  USER_DATA_PROJECT_TABLE: 'USER_DATA_PROJECT_TABLE',\r\n  USER_DATA_PROJECT_TABLE_PROJECT : 'USER_DATA_PROJECT_TABLE_PROJECT',\r\n  USER_DEFINED_FILTER : 'USER_DEFINED_FILTER',\r\n}\r\n\r\n// export const membership={\r\n//   OTP_REQUEST:\"OTP_REQUEST\",\r\n//   OTP_VALIDATION:\"OTP_VALIDATION\"\r\n// }\r\n\r\nexport const  CLEAR_ALL_STATES = \"CLEAR_ALL_STATES\"\r\n","import { homeConstants, dataVisualization, userdataVisualization,  CLEAR_ALL_STATES } from \"./Constants\";\r\nimport config from '../config'\r\nimport axios from \"axios\";\r\nimport '../assets/interceptor/interceptor'\r\n\r\n\r\nfunction sendRequest(url, method, data) {\r\n  let x = axios({ method: method, url, data: data });\r\n  return x\r\n}\r\n\r\n\r\nexport function clearIDPasswordResetPASSWORD() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: homeConstants.CLEAR_ID_PASSWORD_RESET_PASSWORD,\r\n      payload: {},\r\n    });\r\n  };\r\n}\r\n\r\nexport function clearNotice() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: homeConstants.CLEAR_NOTICE_DETAILS,\r\n      payload: {},\r\n    });\r\n  };\r\n}\r\n\r\nexport function logManagement(method,data) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: homeConstants.CLEAR_ID_PASSWORD_RESET_PASSWORD,\r\n      payload: data,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nexport function sendlogManagement(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"sendlogmanagement/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.SENDLOGMANAGEMENT,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\n// export function projectIdStatus(type,data) {\r\n//   return (dispatch) => {\r\n//     dispatch({\r\n//       type: homeConstants.PROJECT_ID,\r\n//       payload: { 'status':data},\r\n//     });\r\n//     dispatch({ type: homeConstants.REQUEST_DONE });\r\n//   };\r\n// }\r\n\r\nexport function samplesCount(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"samplescount/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.SAMPLES_COUNT,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.SAMPLES_COUNT,\r\n            payload: { status: d.status },\r\n          });\r\n        }\r\n        // dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.SAMPLES_COUNT,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\n\r\nexport function sendEmail(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"send-mail/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.OTP_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\nexport function verifyOTP(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"validate/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.OTP_VALIDATION,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function findID(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"findid/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.FIND_ID,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function interPro(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"interpro/\";\r\n    let formData = new FormData()\r\n    if(method===\"POST\"){\r\n      formData.append('file',data['file'])\r\n      formData.append('filename',data['filename'])\r\n      sendRequest(url, method, formData)\r\n        .then((result) => {\r\n          const d = result;\r\n          dispatch({\r\n            type: homeConstants.INTERPRO,\r\n            payload: d[\"data\"],\r\n          });\r\n          dispatch({ type: homeConstants.REQUEST_DONE });\r\n        })\r\n        \r\n        .catch((e) => {\r\n\r\n        });\r\n    }else{\r\n      // formData.append('container_name',data['container_name'])\r\n      url += '?container_name='+data['container_name']\r\n      sendRequest(url, method, formData)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.INTERPRO,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n    }\r\n  }\r\n}\r\nexport function vcfmaf(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"vcfmaf/\";\r\n    let formData = new FormData()\r\n    if(method===\"POST\"){\r\n      formData.append('file',data['file'])\r\n      formData.append('filename',data['filename'])\r\n      sendRequest(url, method, formData)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.VCFMAF,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n    }else{\r\n      // formData.append('container_name',data['container_name'])\r\n      url += '?container_name='+data['container_name']\r\n      sendRequest(url, method, formData)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.VCFMAF,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport function findPassword(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"findpassword/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.FIND_PASSWORD,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\nexport function checkEmail(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"checkemail/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.CHECK_EMAIL,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function checkMobile(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"checkMobile/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.CHECK_MOBILE,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function changePassword(method,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"change-password/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.CHANGE_PASSWORD,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      \r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\nexport function verifyEncodeData(method, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + `checkplus_success/?`+data\r\n    \r\n    sendRequest(encodeURI(url), method, data)\r\n    .then((result) => {\r\n      const d = result;\r\n      dispatch({\r\n        type: homeConstants.VERIFY_ENCODE,\r\n        payload: d[\"data\"],\r\n      });\r\n    })\r\n    .catch((e) => {\r\n\r\n    });\r\n  }\r\n}\r\nexport function getNoticeDetail(type, data) {\r\n\r\n  return (dispatch) => {\r\n    let url = config.auth + `notice-api-get/`;\r\n    // let url = config.auth + `notice-api-get/${data.id}?id=${data.id}`;\r\n    sendRequest(url, type, \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.NOTICE_DETAILS,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function getDashboardCount() {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"data-count/\";\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.DATA_COUNT,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function getRNIDetails(type, data) {\r\n  return (dispatch) => {\r\n\r\n    let url = config.auth + \"report/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.RNI_DATA,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.RNI_DATA,\r\n            payload: { status: d.status },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.RNI_DATA,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\nexport function getUserFiles() {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"files/\";\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.FILE_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getDashboardDsummaryData() {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"data-summary/\";\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.DATA_SUMMARY,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\n\r\nexport function getGenomicInformation(method, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"genomic-information/\";\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.GENOMIC_INFORMATION,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getOncoInformation(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"oncoprint/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.ONCO_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.ONCO_REQUEST,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n        \r\n        dispatch({\r\n          type: dataVisualization.ONCO_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\n\r\nexport function getLolipopInformation(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"lollipop/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.LOLLIPOP_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.LOLLIPOP_REQUEST,\r\n            payload: { data: [], domains: [], status: 204 },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.LOLLIPOP_REQUEST,\r\n          payload: { data: [], domains: [], status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getFusionTable(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"getFusionTable/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.FUSIONTABLE_REQUEST,\r\n            payload:  d \r\n          });\r\n        }\r\n      }).catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function getFusionVennDaigram(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"getFusionVenn/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.FUSIONVENN_REQUEST,\r\n            payload: { \"res\":{...d[\"data\"]}, status: 200 },\r\n          });\r\n        }\r\n      }).catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function clearFusionVennDaigram(type, data) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: dataVisualization.FUSIONVENN_CLEAR,\r\n      payload: {},\r\n    });\r\n  }\r\n}\r\nexport function getClinicalMaxMinInfo(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"getClinicalMaxMinInfo/\";\r\n    if('project_id' in data){\r\n      url += \"?project_id=\"+data['project_id']\r\n    }\r\n    \r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.CLINICALMAXMIN_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        }\r\n      }).catch((e) => {\r\n\r\n        \r\n      });\r\n  }\r\n}\r\nexport function getSankeyJson(type,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"getSankeyJson/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.SANKEYJSON_REQUEST,\r\n            payload: { \"data\":[...d[\"data\"]], status: 200 },\r\n          });\r\n          \r\n\r\n          \r\n          \r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n\r\n      }).catch((e) => {\r\n\r\n        \r\n      });\r\n  }\r\n}\r\n\r\nexport function getVolcanoPlotInfo(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"volcano/\";\r\n\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.VOLCANO_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.VOLCANO_REQUEST,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.VOLCANO_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\nexport function userDefinedGetVolcanoPlotInfo(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"userdefined-volcano-info/\";\r\n    console.log(url)\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.USER_DEFINED_VOLCANO_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.USER_DEFINED_VOLCANO_REQUEST,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.USER_DEFINED_VOLCANO_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getHeatmapInformation(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"heatmap/\";\r\n    // const data = new FormData()\r\n    //\r\n    // data.set('genes', data.genes);\r\n    // if(\"filter\" in data){\r\n    //   data.set('filters', JSON.stringify(data.filter));\r\n    // }\r\n    // if(\"table_type\" in data){\r\n    //   data.set('tab_type', data.table_type);\r\n    // }\r\n    dispatch({\r\n      type: dataVisualization.HEATMAP_REQUEST_STATUS_CODE,\r\n      payload: { status: 204, loader: true },\r\n    });\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.HEATMAP_REQUEST_STATUS_CODE,\r\n            payload: { status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.HEATMAP_REQUEST_STATUS_CODE,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n        dispatch({\r\n          type: dataVisualization.HEATMAP_REQUEST,\r\n          // payload: {...JSON.parse(d[\"data\"]), status:200},\r\n          payload: d[\"data\"],\r\n        });\r\n        // } else {\r\n        //   dispatch({\r\n        //     type: dataVisualization.HEATMAP_REQUEST,\r\n        //     payload: {status:204}\r\n        //   });\r\n        // }\r\n        // dispatch({\r\n        //   type: dataVisualization.HEATMAP_REQUEST,\r\n        //   payload: JSON.parse(d[\"data\"]),\r\n        // });\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: dataVisualization.HEATMAP_REQUEST,\r\n          payload: { status: 204 }\r\n        });\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function file_upload(fileData, projectName) {\r\n  return (dispatch) => {\r\n    const data = new FormData()\r\n    // dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    // fileData.forEach(file=>{\r\n    //   formData.append(\"arrayOfFilesName\", file);\r\n    // });\r\n    Object.keys(fileData).forEach(element => {\r\n      if (fileData[element].type !== undefined) {\r\n        data.append(fileData[element].type, fileData[element].file);\r\n      }\r\n    })\r\n    data.set(\"project_name\", projectName)\r\n\r\n    let url = config.auth + \"user-data-visualization/\";\r\n    sendRequest(url, \"POST\", data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.USERDATA_VISUALIZATION,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: homeConstants.USERDATA_VISUALIZATION_ERROR,\r\n          payload: { [fileData.type]: 'failed' }\r\n        })\r\n      });\r\n  }\r\n}\r\n\r\nexport function new_file_upload(fileData, projectName) {\r\n  return (dispatch) => {\r\n    const data = new FormData()\r\n    // dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    // fileData.forEach(file=>{\r\n    //   formData.append(\"arrayOfFilesName\", file);\r\n    // });\r\n    Object.keys(fileData).forEach(element => {\r\n      if (fileData[element].type !== undefined) {\r\n        data.append(fileData[element].type, fileData[element].file);\r\n      }\r\n    })\r\n    data.set(\"project_name\", projectName)\r\n\r\n    let url = config.auth + \"new-user-data-visualization/\";\r\n    sendRequest(url, \"POST\", data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.NEWUSERDATA_VISUALIZATION,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: homeConstants.USERDATA_VISUALIZATION_ERROR,\r\n          payload: { [fileData.type]: 'failed' }\r\n        })\r\n      });\r\n  }\r\n}\r\nexport function clear_new_file_upload_state() {\r\n  return (dispatch) => \r\n        dispatch({\r\n          type: homeConstants.CLEARNEWUSERDATA_VISUALIZATION,\r\n          payload: {}\r\n        });\r\n  }\r\nexport function clear_upload_clinical_columns() {\r\n  return (dispatch) => \r\n        dispatch({\r\n          type: homeConstants.CLEAR_UPLOAD_CLININCAL_COLUMNS,\r\n          payload: {}\r\n        });\r\n  }\r\n\r\nexport function uploadClinincalSamples(fileData) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"upload-clinical-columns/\";\r\n    sendRequest(url, \"POST\", fileData)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.UPLOAD_CLININCAL_COLUMNS,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: homeConstants.USERDATA_VISUALIZATION_ERROR,\r\n          payload: { [fileData.type]: 'failed' }\r\n        })\r\n      });\r\n  }\r\n}\r\n\r\nexport function getCircosInformation(type, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"circos/\";\r\n    dispatch({\r\n      type: dataVisualization.CIRCOS_REQUEST,\r\n      payload: { status: 0 },\r\n    });\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.CIRCOS_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n          // dispatch({ type: dataVisualization.REQUEST_DONE });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.CIRCOS_REQUEST,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({ type: dataVisualization.CIRCOS_REQUEST, payload: { status: 400 } });\r\n      });\r\n  };\r\n}\r\n\r\nexport function clearCircosInfomation() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: dataVisualization.CLEAR_CIRCOS_INFORMATION,\r\n      payload:{}\r\n    });\r\n  };\r\n}\r\n\r\nexport function getSurvivalInformation(type, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"survival/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.SURVIVAL_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.SURVIVAL_REQUEST,\r\n            payload: { status: d.status },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: dataVisualization.SURVIVAL_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function clearSurvivalIMage(){\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: dataVisualization.CLEAR_SURVIVAL_IMAGE,\r\n      payload:{}\r\n    });\r\n  };\r\n}\r\n\r\nexport function getIgv(type, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"igv/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.IGV_REQUEST,\r\n            payload: d[\"data\"],\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.IGV_REQUEST,\r\n            payload: [],\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.IGV_REQUEST,\r\n          payload: [],\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getBreastKeys(data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"brst-key/\";\r\n    sendRequest(url, \"POST\", data)\r\n      .then((result) => {\r\n        const d = result;\r\n        let data = d['data']\r\n        let tmp = {}\r\n        for (var i = 0; i < data.length; i++) {\r\n          tmp[data[i]['rn_key']] = data[i]['brst_key']\r\n        }\r\n        dispatch({\r\n          type: dataVisualization.KEYS_REQUEST,\r\n          payload: tmp,\r\n        });\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getHeadersFiles() {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"user-data-visualization/\";\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.USERDATA_VISUALIZATION,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getCircosUserData(data) {\r\n  return (dispatch) => {\r\n    const data = new FormData()\r\n\r\n    if ('selected_genes' in data) {\r\n      data.set('genes', data.selected_genes);\r\n    }\r\n\r\n    if ('filter' in data) {\r\n      data.set('filters', data.filter);\r\n    }\r\n\r\n    let url = config.auth + \"circos-user-data/\"\r\n    sendRequest(url, \"POST\", data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: userdataVisualization.CIRCOS_REQUEST,\r\n          payload: d[\"data\"],\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getOncoUserData(data) {\r\n  return (dispatch) => {\r\n    const data = new FormData()\r\n\r\n    if ('selected_genes' in data) {\r\n      data.set('genes', data.selected_genes);\r\n    }\r\n\r\n    if ('filter' in data) {\r\n      data.set('filters', data.filter);\r\n    }\r\n\r\n    let url = config.auth + \"onco-user-data/\"\r\n    sendRequest(url, \"POST\", data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: userdataVisualization.ONCO_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\n\r\n\r\nexport function getVolcanoUserData(data) {\r\n  return (dispatch) => {\r\n    const data = new FormData()\r\n    if ('selected_genes' in data) {\r\n      data.set('genes', data.selected_genes);\r\n    }\r\n    if ('filter' in data) {\r\n      data.set('filters', data.filter);\r\n    }\r\n    let url = config.auth + \"volcano-user-data/\"\r\n    sendRequest(url, \"POST\", data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: userdataVisualization.VOLCANO_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n\r\n  };\r\n}\r\n\r\n\r\nexport function getVolcanoData() {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"volcano/\"\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: userdataVisualization.VOLCANO_DATA_VISUALIZATION_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: userdataVisualization.VOLCANO_DATA_VISUALIZATION_REQUEST,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: userdataVisualization.VOLCANO_DATA_VISUALIZATION_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n\r\n  };\r\n}\r\n\r\n\r\n\r\nexport function getUserDataProjectsTableData(project = false) {\r\n  return (dispatch) => {\r\n    let url = ''\r\n    if (project !== false) {\r\n      url = `${config.auth}user-data-projects/${project}/`\r\n    } else {\r\n      url = `${config.auth}user-data-projects/`\r\n    }\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: userdataVisualization.USER_DATA_PROJECT_TABLE,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n\r\n  };\r\n}\r\n\r\nexport function sankeyImageData(data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"sankeyimagedata/\"\r\n    sendRequest(url, \"POST\", data)\r\n   \r\n}\r\n}\r\nexport function sendReportData(type,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"generatereport/\"\r\n    // sendRequest(url, \"POST\", data)\r\n    sendRequest(url, type, data)\r\n    .then((result) => {\r\n      const d = result;\r\n      dispatch({\r\n        type: dataVisualization.PDF_REPORT,\r\n        payload: d[\"data\"],\r\n      });\r\n    })\r\n    .catch((e) => {\r\n\r\n    });\r\n}\r\n}\r\nexport function clearPdfLink(type,data){\r\n  return (dispatch) => {\r\n      dispatch({\r\n        type: dataVisualization.CLEAR_PDF_LINK,\r\n        payload:{}\r\n      });\r\n    \r\n}\r\n}\r\n\r\nexport function getCircosSamplesRnidList() {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"brst-samples-rnid-list/\"\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: dataVisualization.CIRCOS_SAMPLES_RNID,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n\r\n  };\r\n}\r\n\r\nexport function getScatterInformation(type, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"scatter-plot/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.SCATTER_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.SCATTER_REQUEST,\r\n            payload: { status: d.status },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.SCATTER_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getGeneFusionInformation(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"check-fusion-genes/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n        dispatch({\r\n          type: dataVisualization.CHECK_GENE_FUSION_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getFusionExons(type,data){\r\n  return (dispatch) => {\r\n    let url = config.auth + \"getFusionExons/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n        dispatch({\r\n          type: dataVisualization.FUSION_EXON_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function getFusionInformation(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"fusion-plot/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n        dispatch({\r\n          type: dataVisualization.FUSION_REQUEST,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getBoxInformation(type, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"box-plot/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n        if (d.status === 200) {\r\n          dispatch({\r\n            type: dataVisualization.BOX_REQUEST,\r\n            payload: { ...d[\"data\"], status: 200 },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: dataVisualization.BOX_REQUEST,\r\n            payload: { status: 204 },\r\n          });\r\n        }\r\n        dispatch({ type: dataVisualization.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n        dispatch({\r\n          type: dataVisualization.BOX_REQUEST,\r\n          payload: { status: 204 },\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getOncoImages(method, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"onco-sample-images/\";\r\n    dispatch({\r\n      type: dataVisualization.ONCO_IMAGES_INFORMATION,\r\n      payload: null,\r\n    });\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        let payload = []\r\n        if (d.status === 200) {\r\n          payload = d[\"data\"]\r\n        }\r\n        dispatch({\r\n          type: dataVisualization.ONCO_IMAGES_INFORMATION,\r\n          payload: payload,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\n\r\nexport function getCircosTimelineTable(method, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"onco-age-diagram/\";\r\n    dispatch({\r\n      type: dataVisualization.CIRCOS_TIMELINE_GRAPH,\r\n      payload: null,\r\n    });\r\n    sendRequest(url, method, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        let payload = []\r\n        if (d.status === 200) {\r\n          payload = d[\"data\"]\r\n        }\r\n        dispatch({\r\n          type: dataVisualization.CIRCOS_TIMELINE_GRAPH,\r\n          payload: payload,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\nexport function getPassEncodeId(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"niceKey/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        let r = result['data']\r\n        if (result['status'] === 200) {\r\n          dispatch({ type: dataVisualization.REQUEST_DONE });\r\n          dispatch({\r\n            type: dataVisualization.PASS_ENCODE_ID,\r\n            payload: r,\r\n          });\r\n        }\r\n      }).catch((e) => {\r\n      })\r\n  }\r\n}\r\n\r\nexport function checkUserName(type, data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"registration/?type=\" + data['type'] + '&value=' + data['value'];\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        let r = result['data']\r\n        if (result['status'] === 200) {\r\n          dispatch({ type: dataVisualization.REQUEST_DONE });\r\n          dispatch({\r\n            type: dataVisualization.CHECK_USER,\r\n            payload: r,\r\n          });\r\n        }\r\n      }).catch((e) => {\r\n      })\r\n  }\r\n}\r\n\r\nexport function userRegister(type, data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"registration/\";\r\n    sendRequest(url, type, data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n        dispatch({\r\n          type: homeConstants.REGISTRATION,\r\n          payload: d[\"data\"],\r\n        });\r\n        dispatch({ type: homeConstants.REQUEST_DONE });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  };\r\n}\r\n\r\n\r\n// export function getKMeanformation(type, data) {\r\n//   return (dispatch) => {\r\n//     let url = config.auth + \"k-mean/\";\r\n//     // const data = new FormData()\r\n//\r\n//     // data.set('genes', data.genes);\r\n//     // if(\"filter\" in data){\r\n//     //   data.set('filters', JSON.stringify(data.filter));\r\n//     // }\r\n//     // if(\"table_type\" in data){\r\n//     //   data.set('tab_type', data.table_type);\r\n//     // }\r\n//\r\n//     sendRequest(url, type, data)\r\n//       .then((result) => {\r\n//         const d = result\r\n//         // if (d.status === 200) {\r\n//           dispatch({\r\n//             type: dataVisualization.KMEAN_REQUEST,\r\n//             // payload: {...JSON.parse(d[\"data\"]), status:200},\r\n//             payload: d[\"data\"],\r\n//           });\r\n//         // } else {\r\n//         //   dispatch({\r\n//         //     type: dataVisualization.HEATMAP_REQUEST,\r\n//         //     payload: {status:204}\r\n//         //   });\r\n//         // }\r\n//         // dispatch({\r\n//         //   type: dataVisualization.HEATMAP_REQUEST,\r\n//         //   payload: JSON.parse(d[\"data\"]),\r\n//         // });\r\n//         dispatch({ type: dataVisualization.REQUEST_DONE });\r\n//       })\r\n//       .catch((e) => {\r\n//         dispatch({\r\n//           type: dataVisualization.KMEAN_REQUEST,\r\n//           payload: {status:204}\r\n//         });\r\n//\r\n//       });\r\n//   };\r\n// }\r\n\r\n\r\nexport function clearDataVisualizationState() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_ALL_STATES,\r\n      payload: {},\r\n    });\r\n  };\r\n}\r\n\r\n\r\nexport function fetchProjectTableData(data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"user-project-table/\";\r\n    dispatch({\r\n      type: userdataVisualization.USER_DATA_PROJECT_TABLE_PROJECT,\r\n      payload: {},\r\n    });\r\n    sendRequest(url, 'POST', data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: userdataVisualization.USER_DATA_PROJECT_TABLE_PROJECT,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: userdataVisualization.USER_DATA_PROJECT_TABLE_PROJECT,\r\n          payload: {},\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getUserDefinedFilter(data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    let url = config.auth + \"new-user-data-visualization_filter/\";\r\n    dispatch({\r\n      type: userdataVisualization.USER_DEFINED_FILTER,\r\n      payload: {},\r\n    });\r\n    sendRequest(url, 'POST', data)\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: userdataVisualization.USER_DEFINED_FILTER,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: userdataVisualization.USER_DEFINED_FILTER,\r\n          payload: {},\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function updateDownloadVisualizationPurpose(data) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"download-capture-info/\";\r\n    sendRequest(url, 'POST', data)\r\n      .then((result) => {\r\n        // let res = result\r\n        dispatch({\r\n          type: userdataVisualization.UPDATE_DOWNLOAD_VISUALIZATION_PURPOSE,\r\n          payload: result,\r\n        });\r\n        return result\r\n      })\r\n      .catch(e => {\r\n      })\r\n\r\n  }\r\n}\r\n\r\n\r\nexport function languageChange(data) {\r\n  return (dispatch) => {\r\n    //   dispatch({ type: homeConstants.DATA_SUMMARY });\r\n    dispatch({\r\n      type: homeConstants.APPLICATION_LANGUAGE,\r\n      payload: data,\r\n    });\r\n  }\r\n}\r\n\r\nexport function getFaqData(id) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"faq-api/?id=\" + id;\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.DATA_FAQ,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function getNoticeData(id) {\r\n  return (dispatch) => {\r\n    let url = config.auth + \"notice-api/?id=\" + id;\r\n    sendRequest(url, \"GET\", \"\")\r\n      .then((result) => {\r\n        const d = result;\r\n        dispatch({\r\n          type: homeConstants.DATA_NOTICE,\r\n          payload: d[\"data\"],\r\n        });\r\n      })\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function getQaData(id, data) {\r\n  return (dispatch) => {\r\n    let request\r\n    if (id) {\r\n      let url = config.auth + \"qa-api/?id=\" + id;\r\n      request = sendRequest(url, \"GET\", \"\")\r\n    } else {\r\n      let url = config.auth + \"qa-api/\";\r\n      request = sendRequest(url, \"POST\", data)\r\n    }\r\n    request.then((result) => {\r\n      const d = result;\r\n      dispatch({\r\n        type: homeConstants.DATA_QA,\r\n        payload: d[\"data\"],\r\n      });\r\n    })\r\n      .catch((e) => {\r\n\r\n      });\r\n  }\r\n}\r\n\r\nexport function clearProjectTableDataTableData() {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: userdataVisualization.USER_DATA_PROJECT_TABLE_PROJECT,\r\n      payload: {},\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loading(props) {\r\n  if (props.isLoading) {\r\n    if (props.timedOut) {\r\n      return <div>Loader timed out!</div>;\r\n    } else if (props.pastDelay) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (props.error) {\r\n    return <div>Error! Component failed to load</div>;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  defaultPath: '/k-core/',\r\n  basename: '/k-core/',\r\n  auth: 'http://3.137.187.168:9798/',\r\n  media: 'http://3.137.187.168:9798/media',\r\n}\r\n","import React, {useState} from 'react';\nimport {IntlProvider} from 'react-intl';\nimport {useDispatch} from 'react-redux';\nimport Korea from './lang/kr.json';\nimport English from './lang/en.json';\nimport {languageChange} from \"./actions/api_actions\"\nexport const Context = React.createContext('en-US');\n\n// import reportWebVitals from './reportWebVitals';\n// const local = 'kr-KO'//navigator.language;\nconst local = 'en-US'\nlet lang;\nif (local===\"kr-KO\") {\n    lang = Korea; \n} else {\n    lang = English;\n  \n}\n\nconst Wrapper = (props) => {\n    const [locale, setLocale] = useState(local);\n    const [messages, setMessages] = useState(lang);\n    const dispatch = useDispatch();\n\n    function selectLanguage(e) {\n        const newLocale = e.target.value;\n        setLocale(newLocale);\n\n        if (newLocale === 'kr-KO') {\n            // dispatch(languageChange(\"en\"));\n            dispatch(languageChange(\"kr-KO\"));\n            setMessages(Korea);\n        } else {\n            dispatch(languageChange(\"en-US\"))\n            setMessages(English);\n            \n        }\n    }\n\n    return (\n        <Context.Provider value = {{locale, selectLanguage}}>\n            <IntlProvider messages={messages} locale={locale} defaultLocale={(locale==='en-US') ? \"en-US\" :locale}>\n                {props.children}\n            </IntlProvider>\n        </Context.Provider>\n\n    );\n}\n\n\nexport default Wrapper;\n","const LocalStorageService = (function(){\r\n    let _service;\r\n    function _getService(){\r\n        if(!_service) {\r\n            _service = this;\r\n            return _service\r\n        }\r\n        return _service\r\n    }\r\n\r\n    function _setToken(tokenObj){\r\n      localStorage.setItem('ncc_access_token', tokenObj.access);\r\n      localStorage.setItem('ncc_refresh_token', tokenObj.refresh);\r\n    }\r\n\r\n    function _getAccessToken() {\r\n        return localStorage.getItem('ncc_access_token');\r\n    }\r\n\r\n    function _getRefreshToken() {\r\n        return localStorage.getItem('ncc_refresh_token');\r\n    }\r\n\r\n    function _clearToken() {\r\n        localStorage.removeItem('ncc_access_token');\r\n        localStorage.removeItem('ncc_refresh_token');\r\n    }\r\n\r\n    return {\r\n        getService : _getService,\r\n        setToken : _setToken,\r\n        getAccessToken : _getAccessToken,\r\n        getRefreshToken : _getRefreshToken,\r\n        clearToken : _clearToken\r\n    }\r\n\r\n}) ();\r\n\r\nexport default LocalStorageService;\r\n","import LocalStorageService from \"./LocalStorageService\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\n\r\nlet localStorageService = LocalStorageService\r\n\r\n\r\naxios.interceptors.request.use( config =>{\r\n    const token = localStorageService.getAccessToken();\r\n    if (token) {\r\n      config.headers['Authorization'] = 'Bearer '+token;\r\n      config.headers['Content-Type'] = 'application/json';\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    Promise.reject(error)\r\n})\r\n\r\naxios.interceptors.response.use((response) => {\r\n  return response\r\n  },\r\n  function (error){\r\n    const originalRequest = error.config;\r\n    if (error.response.status === 401 && !originalRequest._retry){\r\n      originalRequest._retry = true;\r\n      axios.post(config.auth+'api/token/refresh/',{\r\n        \"refresh\":localStorageService.getRefreshToken()\r\n      }).then((res) => {\r\n        if (res) {\r\n          let d = res['data'];\r\n          d['refresh'] = localStorageService.getRefreshToken()\r\n          localStorageService.setToken(res.data);\r\n          axios.defaults.headers.common['Authorization'] = 'Bearer '+localStorageService.getAccessToken();\r\n          window.location.reload(true);\r\n          return axios(originalRequest);\r\n        }\r\n      }).catch((error) => {\r\n\r\n        localStorageService.clearToken()\r\n        // window.location.href = '/'\r\n      })\r\n\r\n    } else if (error.response.status === 409) {\r\n      return error.response\r\n    }\r\n    return Promise.reject(error);\r\n  })\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return  <Route  {...rest} render={props => (<Component {...props} />\r\n    )} />\r\n\r\n}\r\n","import React, { Suspense, useState, useEffect} from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport Loader from './layout/Loader/';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport '../assets/css/style.css'\r\nimport Wrapper  from '../wrapper';\r\n// import ReactGA from 'react-ga';\r\nrequire('dotenv').config()\r\n\r\nconst Web = Loadable({\r\n  loader: () => import('./layout/Web'),\r\n  loading: Loader,\r\n  delay: 60\r\n});\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [blurScreenCss] = useState(\"\")\r\n\r\n  // useEffect(()=>{\r\n  //   const TRACKING_ID = \"UA-240000755-1\"; // YOUR_OWN_TRACKING_ID\r\n  //   ReactGA.initialize(TRACKING_ID);\r\n  // })\r\n  return (\r\n    <Wrapper>\r\n      <div className={blurScreenCss}>\r\n        <Suspense fallback={<Loader />}>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"*\" component={Web} />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { homeConstants } from '../actions/Constants';\r\n\r\nconst homeReducer = (state = { 'home': 'home' }, { type, payload }) => {\r\n  switch (type) {\r\n    case homeConstants.HOME_REQUEST:\r\n      return { ...state }\r\n    case homeConstants.DATA_COUNT:\r\n      return {\r\n        ...state,\r\n        dataCount: payload\r\n      }\r\n    case homeConstants.DATA_SUMMARY:\r\n      return {\r\n        ...state,\r\n        dataSummary: payload\r\n      }\r\n    case homeConstants.GENOMIC_INFORMATION:\r\n      return {\r\n        ...state,\r\n        genomicData: payload\r\n      }\r\n    case homeConstants.USERDATA_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        fileUploadData: payload\r\n      }\r\n    case homeConstants.NEWUSERDATA_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        newFileUploadData: payload\r\n      }\r\n      case homeConstants.UPLOAD_CLININCAL_COLUMNS:\r\n        return {\r\n          ...state,\r\n          uploadClinicalColumns: payload\r\n        }\r\n\r\n    case homeConstants.CLEARNEWUSERDATA_VISUALIZATION:\r\n      const {newFileUploadData, ...remaining}=state \r\n      state= remaining\r\n      return  state\r\n        // ...state,\r\n        // newFileUploadData: payload\r\n\r\n    case homeConstants.CLEAR_UPLOAD_CLININCAL_COLUMNS:\r\n      const {uploadClinicalColumns, ...remaining_clinical_columns}=state \r\n      state= remaining_clinical_columns\r\n      return  state\r\n\r\n    case homeConstants.NEWUSERDATA_VISUALIZATION_ERROR:\r\n      return {\r\n        ...state,\r\n        newFileUploadStatus: { ...state.fileUploadStatus, ...payload }\r\n      }\r\n    case homeConstants.USERDATA_VISUALIZATION_ERROR:\r\n      return {\r\n        ...state,\r\n        fileUploadStatus: { ...state.fileUploadStatus, ...payload }\r\n      }\r\n    case homeConstants.APPLICATION_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        languageReducer: payload\r\n      }\r\n    case homeConstants.DATA_FAQ:\r\n      return {\r\n        ...state,\r\n        dataFaq: payload\r\n      }\r\n    case homeConstants.DATA_NOTICE:\r\n      return {\r\n        ...state,\r\n        dataNotice: payload\r\n      }\r\n    case homeConstants.DATA_QA:\r\n      return {\r\n        ...state,\r\n        dataQA: payload\r\n      }\r\n    case homeConstants.NOTICE_DETAILS:\r\n      return {\r\n        ...state,\r\n        noticedata: payload\r\n      }\r\n    case homeConstants.OTP_REQUEST:\r\n      return {\r\n        ...state,\r\n        emailsentstatus: payload\r\n      }\r\n    case homeConstants.OTP_VALIDATION:\r\n      return {\r\n        ...state,\r\n        otp_validation_status: payload\r\n      }\r\n    case homeConstants.FIND_ID:\r\n      return {\r\n        ...state,\r\n        find_id: payload\r\n      }\r\n    case homeConstants.FIND_PASSWORD:\r\n      return {\r\n        ...state,\r\n        find_password: payload\r\n      }\r\n    case homeConstants.REGISTRATION:\r\n      return {\r\n        ...state,\r\n        registration_status: payload\r\n      }\r\n      case homeConstants.CHANGE_PASSWORD:\r\n        return {\r\n          ...state,\r\n          change_password_status:payload\r\n        }\r\n      case homeConstants.REQUEST_DONE:\r\n        return{\r\n          ...state\r\n        }\r\n      case homeConstants.CHECK_EMAIL:\r\n        return{\r\n          ...state,\r\n          is_email_exist:payload\r\n        }\r\n    case homeConstants.VERIFY_ENCODE:\r\n      return {\r\n        ...state,\r\n        verifyMobile:payload\r\n      }\r\n    case homeConstants.INTERPRO:\r\n      return {\r\n        ...state,\r\n        interpro:payload\r\n      }\r\n    case homeConstants.VCFMAF:\r\n      return {\r\n        ...state,\r\n        vcfmaf:payload\r\n      }\r\n\r\n    case homeConstants.LOGMANAGEMENT:\r\n      return {\r\n        ...state,\r\n        logmanagement:[ ...payload]\r\n      }\r\n    case homeConstants.CHECK_MOBILE:\r\n      return {\r\n        ...state,\r\n        mobileVerified:payload\r\n      }\r\n    case homeConstants.SENDLOGMANAGEMENT:\r\n      return {\r\n        ...state,\r\n        sendlogmanagement:payload\r\n      }\r\n\r\n    // case homeConstants.PROJECT_ID:\r\n    //   return {\r\n    //     ...state,\r\n    //     project_id_status:payload\r\n    //   }\r\n\r\n    case homeConstants.CLEAR_NOTICE_DETAILS:\r\n      const {noticedata, ...remains}=state\r\n      state = remains\r\n      return state\r\n      \r\n      \r\n    case homeConstants.CLEAR_ID_PASSWORD_RESET_PASSWORD:\r\n      const {find_id,find_password,change_password_status, ...rest}=state \r\n      state= rest\r\n      return  state\r\n      \r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default homeReducer;\r\n","import { dataVisualization, userdataVisualization, CLEAR_ALL_STATES } from '../actions/Constants';\r\n\r\nconst dataVisualizationReducer = (state = {'data':'data'}, {type,payload}) => {\r\n  switch (type) {\r\n\r\n    case dataVisualization.CIRCOS_REQUEST:\r\n      return {\r\n        ...state,\r\n        circosSummary: payload\r\n      }\r\n    case dataVisualization.CLEAR_CIRCOS_INFORMATION:\r\n        const {circosSummary, ...restt}=state \r\n        state= restt\r\n        return  state\r\n    case dataVisualization.ONCO_REQUEST:\r\n      return {\r\n        ...state,\r\n        oncoSummary: payload\r\n      }\r\n    case dataVisualization.KEYS_REQUEST:\r\n      return {\r\n        ...state,\r\n        Keys: payload\r\n      }\r\n    case dataVisualization.LOLLIPOP_REQUEST:\r\n      return {\r\n        ...state,\r\n        lollipopSummary:payload\r\n      }\r\n    case dataVisualization.REQUEST_DONE:\r\n      return{\r\n        ...state\r\n      }\r\n    case dataVisualization.VOLCANO_REQUEST:\r\n      return {\r\n        ...state,\r\n        volcanoSummary: payload\r\n      }\r\n    case dataVisualization.USER_DEFINED_VOLCANO_REQUEST:\r\n      return {\r\n        ...state,\r\n        userDefinedVolcanoSummary: payload\r\n      }\r\n    case dataVisualization.HEATMAP_REQUEST:\r\n      return {\r\n        ...state,\r\n        heatmapSummary: payload\r\n      }\r\n    case dataVisualization.HEATMAP_REQUEST_STATUS_CODE:\r\n      return {\r\n        ...state,\r\n        heatmapSummaryStatusCode: payload\r\n      }\r\n    case dataVisualization.SURVIVAL_REQUEST:\r\n      return {\r\n        ...state,\r\n        survivalSummary: payload\r\n      }\r\n\r\n    case dataVisualization.CLEAR_SURVIVAL_IMAGE:\r\n        return  {\r\n          ...state,\r\n          survivalSummary:''\r\n        }\r\n      case dataVisualization.IGV_REQUEST:\r\n        return {\r\n          ...state,\r\n          igvSummary: payload\r\n        }\r\n    case userdataVisualization.USER_DATA_PROJECT_TABLE:\r\n      return {\r\n        ...state,\r\n        userProjectsDataTable: payload\r\n      }\r\n    case dataVisualization.CIRCOS_SAMPLES_RNID:\r\n      return {\r\n        ...state,\r\n        circosSanpleRnidListData : payload\r\n      }\r\n    case dataVisualization.SCATTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        scatterData : payload\r\n      }\r\n    case dataVisualization.CHECK_GENE_FUSION_REQUEST:\r\n      return {\r\n        ...state,\r\n        fusionGenes : payload\r\n      }\r\n    case dataVisualization.FUSION_REQUEST:\r\n      return {\r\n        ...state,\r\n        fusionData : payload\r\n      }\r\n    case dataVisualization.BOX_REQUEST:\r\n      return {\r\n        ...state,\r\n       boxData : payload\r\n      }\r\n    case dataVisualization.ONCO_IMAGES_INFORMATION:\r\n      return {\r\n        ...state,\r\n        oncoSampleImagesData: payload\r\n      }\r\n    case dataVisualization.CIRCOS_TIMELINE_GRAPH:\r\n      return {\r\n        ...state,\r\n        circosTimelieTableData: payload\r\n      }\r\n    \r\n    case dataVisualization.PASS_ENCODE_ID:\r\n      return {\r\n        ...state,\r\n        passKey:payload\r\n      }\r\n    case dataVisualization.CHECK_USER:\r\n      return {\r\n        ...state,\r\n        checkUserName: payload\r\n      }\r\n    case dataVisualization.REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        registerData: payload\r\n      }\r\n    case dataVisualization.KMEAN_REQUEST:\r\n      return {\r\n        ...state,\r\n        kmeanSummary: payload\r\n      }\r\n    case dataVisualization.CLINICALMAXMIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        clinicalMaxMinInfo: payload\r\n      }\r\n    case dataVisualization.RNI_DATA:\r\n      return {\r\n        ...state,\r\n        rniData: payload\r\n      }\r\n    case dataVisualization.FUSIONVENN_REQUEST:\r\n      return {\r\n        ...state,\r\n        VennData: payload\r\n      }\r\n    case dataVisualization.FUSIONVENN_CLEAR:\r\n      const {VennData, ...remaining}=state \r\n      state= remaining\r\n      return  state\r\n    case dataVisualization.FUSION_EXON_REQUEST:\r\n      return {\r\n        ...state,\r\n        ExonData: payload\r\n      }\r\n    case dataVisualization.FUSIONVENN_RNID:\r\n      return {\r\n        ...state,\r\n        VennRnid:payload\r\n      }\r\n    case dataVisualization.SANKEYJSON_REQUEST:\r\n      return {\r\n        ...state,\r\n        SankeyJson:payload\r\n      }\r\n    case dataVisualization.FUSIONTABLE_REQUEST:\r\n      return {\r\n        ...state,\r\n        FusionTable:payload\r\n      }\r\n    case CLEAR_ALL_STATES:\r\n      return {\r\n        \r\n      }\r\n    case userdataVisualization.USER_DATA_PROJECT_TABLE_PROJECT:\r\n      return {\r\n        ...state, \r\n        userDataProjectTable: payload\r\n      }\r\n    case userdataVisualization.USER_DEFINED_FILTER:\r\n      return {\r\n        ...state, \r\n        userDefinedFilter: payload\r\n      }\r\n      case dataVisualization.SAMPLES_COUNT:\r\n      return {\r\n        ...state, \r\n        samplesCount: payload\r\n      }\r\n    case dataVisualization.UPDATE_DOWNLOAD_VISUALIZATION_PURPOSE:\r\n      return {\r\n        ...state, \r\n        UpdateDownloadVisualizationPurpose: payload\r\n      }\r\n      \r\n    case dataVisualization.PDF_REPORT:\r\n      return {\r\n        ...state, \r\n        PDF_Report: payload\r\n      }\r\n\r\n      case dataVisualization.CLEAR_PDF_LINK:\r\n        const {PDF_Report, ...rest}=state \r\n        state= rest\r\n        return  state\r\n        \r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default dataVisualizationReducer;\r\n","import { combineReducers } from 'redux';\r\nimport homeReducer from './home.reducer';\r\nimport dataVisualizationReducer from './datavisualisation.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  homeReducer,\r\n  dataVisualizationReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst middlewares = [thunk];\r\nif (process.env.NODE_ENV === `development`) {\r\n  const { logger } = require(`redux-logger`);\r\n\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(\r\n    thunk,\r\n    loggerMiddleware\r\n  )\r\n\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/tailwind.css';\nimport './styles/index.css';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App/index';\nimport {store} from './store';\nimport config from './config';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter  basename={config.basename}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}