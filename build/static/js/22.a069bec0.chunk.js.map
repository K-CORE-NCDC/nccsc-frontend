{"version":3,"sources":["containers/Common/Loader.js","assets/TkExMjg3OC5FVkEuMTAwLnZjZg.vcf","assets/images/vcftomafexample_File.png","containers/Tools/Vcfmaf.js"],"names":["LoaderComp","className","type","color","height","width","timeout","Modal","showModal","setShowModal","body","style","onClick","src","AttachmentsImage","alt","margin","href","Attachments","download","Vcfmaf","useState","vcfMafFile","setVcfMafFile","loader","setLoader","startInterval","setStartInterval","msg","setMsg","setLoop","html","setHtml","setShowModalInfo","isError","setIsError","dispatch","useDispatch","vcf2mafResponse","useSelector","data","homeReducer","vcfmaf","InforIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","backend_url","config","useEffect","setInterval","interval","clearInterval","h","push","stateData","Loader","htmlFor","id","defaultMessage","accept","onChange","e","target","files","includes","length"],"mappings":"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","file":"static/js/22.a069bec0.chunk.js","sourcesContent":["import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function LoaderComp() {\r\n  return (\r\n      <div className=\"flex justify-center mt-12\">\r\n        <div className=\"bg-white shadow-md rounded-full\">\r\n          <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#0c3c6a\"\r\n            height={80}\r\n            width={80}\r\n            timeout={3000000} //3 secs\r\n          />\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/TkExMjg3OC5FVkEuMTAwLnZjZg.c1b46580.vcf\";","export default __webpack_public_path__ + \"static/media/vcftomafexample_File.3eea4c23.png\";","import React, { useState, useEffect } from 'react'\n\nimport {\n    vcfmaf\n} from \"../../actions/api_actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LoaderCmp from '../Common/Loader'\nimport config from '../../config';\nimport {FormattedMessage} from 'react-intl';\nimport Attachments from '../../assets/TkExMjg3OC5FVkEuMTAwLnZjZg.vcf'\nimport AttachmentsImage from \"../../assets/images/vcftomafexample_File.png\";\n\nfunction Modal({ showModal, setShowModal, body }) {\n    return (\n      <>\n        {showModal ? (\n          <>\n            <div\n              className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\n            >\n              <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                {/*content*/}\n                <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\" style={{width:'31vw'}}>\n                  {/*header*/}\n                  <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                    <h3 className=\"text-3xl font-semibold\">\n                      Vcf to Maf Sample File\n                    </h3>\n                    <button\n                      className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                      onClick={() => setShowModal(false)}\n                    >\n                      <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                        Ã—\n                      </span>\n                    </button>\n                  </div>\n                  {/*body*/}\n                  <div className=\"relative p-6 flex-auto\">\n                    <div className=\"my-4 text-2xl leading-relaxed\">\n                      <ul className='pt-4 list-inside'>\n                      <li className='ml-4 list-decimal'>VCF(Variant Call Format) is a text file format for variant information. </li>\n                      <li className='ml-4 list-decimal'>It contains meta-information lines, a headerline, and then data lines each containing information about a position in the genome.</li>\n                      <li className='ml-4 list-decimal'>The format also has the ability to contain genotype information on samples for each position.</li>\n                      </ul>\n                      <img src={AttachmentsImage} alt=\"ExampleFileImage\"  width=\"97%\"  height=\"90%\" style={{ margin: \"auto\" }}/>\n                      <p className='ml-4 mt-4 list-decimal'>Click on the link to download sample file</p>\n                      <a className='ml-4 mt-4 text-blue-300' href={Attachments} download >Download</a>\n                    </div>\n                  </div>\n                  {/*footer*/}\n                  <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\n                    <button\n                      className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"button\"\n                      onClick={() => setShowModal(false)}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n\nfunction Vcfmaf() {\n    const [vcfMafFile, setVcfMafFile] = useState()\n    const [loader, setLoader] = useState(false)\n    const [startInterval, setStartInterval] = useState(false)\n    const [msg, setMsg] = useState('')\n    const [loop,setLoop] = useState(null)\n    const [html, setHtml] = useState([])\n    const [showModalInfo, setShowModalInfo] = useState(false)\n    const [showModal, setShowModal] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const dispatch = useDispatch();\n    const vcf2mafResponse = useSelector((data) => data.homeReducer.vcfmaf);    \n    \n    const setShowModalFunction = (stateData) => {\n        setShowModal(stateData)\n      }\n\n    const InforIcon = () => {\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        )\n      }\n    let backend_url = config['auth']\n    let VcfMafTool = (event) => {\n        setVcfMafFile(event.target.files[0])\n    }\n    \n\n    let uploadFile = () => {\n        if(vcfMafFile[\"name\"].includes(\".vcf\")){\n            setIsError(false)\n            setLoader(true)\n            dispatch(vcfmaf(\"POST\", { \"file\": vcfMafFile, \"filename\": vcfMafFile[\"name\"] }));\n            setMsg('File Uploading, Please Wait......')\n        }\n        else{\n            setIsError(true)\n        }\n\n    };\n\n    useEffect(()=>{\n        if(startInterval){\n            setLoop(setInterval(() => {\n                dispatch(vcfmaf(\"GET\", { \"container_name\": vcf2mafResponse['container_name']  }))\n            }, 10000));\n        }\n    },[startInterval])\n\n    \n    \n    useEffect(()=>{\n        if(vcf2mafResponse){\n            if(vcf2mafResponse['status']==='running'){\n                setLoader(true)\n                setStartInterval(true)\n                setMsg('File Uploaded, Conversion Started.....')\n            }else{\n                setLoader(false)\n                setStartInterval(false)\n                setLoop(interval => {\n                    clearInterval(interval);\n                    return null;\n                });\n                let h = []\n                h.push(\n                    <>\n                        <div className='flex flex-row'>\n                            <div>\n                                <p>Your Results are ready kindly click link to download &nbsp;</p>\n                                <a className='text-blue-600 hover:text-blue-700 transition duration-300 ease-in-out mb-4'\n                                 href={backend_url+\"media/VcfMap/files/\"+vcf2mafResponse['container_name']+\".maf\"} \n                                 download={vcf2mafResponse['container_name']+\".maf\"}>{vcf2mafResponse['container_name']}</a>\n                            </div>\n                            {/* <div>\n                                <p className='text-blue-400 hover:text-blue-500 transition duration-300 ease-in-out mb-4'>logs</p>\n                            </div> */}\n                        </div>\n                    </>\n                )\n                setHtml(h)\n            }\n        }\n    },[vcf2mafResponse])\n\n\n\n    return (\n        <div>\n             <div>\n                {showModal && <Modal showModal={showModal} setShowModal={setShowModalFunction}/>}\n            </div>\n            <div>\n            <div className=\"flex justify-between\">\n                    <div></div>\n                <h1 className=\"text-center font-medium leading-tight text-5xl mt-4 mb-2 text-black-600 flex justify-center\">\n                    Vcf to Maf\n                </h1>\n                <div className=\"flex justify-end xs:pr-9 sm:pr-10 lg:pr-52\">\n                </div>\n              </div>\n                <div className=\"py-5\">\n                {!loader ? <section className=\"mt-2 flex flex-col items-center justify-center\">\n                        <div>\n                            <div className=\"bg-white p-8\"\n                                style={{\n                                    width: \"90rem\"\n                                }}\n                            >\n                               <div className=\"flex flex-row-reverse \">\n                <button onClick={() => setShowModalInfo(true)} className=\"has-tooltip bg-red-500 hover:bg-red-700 text-white text-center py-2 px-4 rounded-full h-14 w-14 inline-flex items-center\">\n                  <InforIcon />\n                </button>\n              </div>\n                                <div className=\"\">\n                                    <div>\n                                        <div className=\"flex \">\n                                            <div className=\"mb-3 w-96\">\n                                                <label htmlFor=\"VcfMafFile\" className=\"text-md mx-2 my-2 form-label inline-block mb-2 text-gray-700\"><FormattedMessage id=\"UploadFile\" defaultMessage=\"Upload File\" /></label>\n                                                <input className=\"form-control\n                                                    block\n                                                    w-full\n                                                    py-1.5VcfMafFile\n                                                    text-md\n                                                    text-gray-700\n                                                    bg-white bg-clip-padding\n                                                    border border-solid border-gray-300\n                                                    rounded\n                                                    transition\n                                                    ease-in-out\n                                                    m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\" \n                                                    accept=\".vcf, \" type=\"file\" id=\"VcfMafFile\" onChange={(e)=>VcfMafTool(e)} /> \n                                            </div>\n                                        </div>\n                                        <button\n                                            className='bg-main-blue hover:bg-main-blue mb-3 lg:w-80 sm:w-40 lg:h-16 sm:h-16 xs:text-sm sm:text-xl lg:text-2xl text-white mt-4 font-bold py-2 px-4 border border-blue-700 rounded' onClick={uploadFile}>\n                                            <FormattedMessage id=\"Submit\" defaultMessage=\"Submit\" />\n                                        </button>\n                                    </div>\n                                    {isError && <p>Upload only .vcf extension files</p> }\n                                </div>\n                            </div>\n                            <span className='text-base'>\n                                Note: only .vcf file accepted and files which are generated using genome version hg38\n                            </span>\n                        </div>\n                    </section>\n                    :<>\n                        <LoaderCmp/>\n                        <p className='text-center'>\n                            {msg}\n                        </p>\n                    </>}\n                </div>\n                {html.length>0 && \n                    <section className=\"mt-2 flex flex-col items-center justify-center\">\n                        <div>\n                            <div className=\"bg-white p-8\" style={{width: \"90rem\"}}>\n                                {html}\n                            </div>\n                        </div>\n                    </section>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Vcfmaf"],"sourceRoot":""}